syntax = "proto3";

/*
    Файл содержит описание сервиса Sync_service
*/


package grpc;

option go_package = "./grpc_proto";

import "google/protobuf/timestamp.proto";

// sync_service - сервис обмена с Базой данных
service Sync_service {
}


// -------------------------- Request ----------------------------------------------

// RequestId - параметры запроса на сервер
message RequestId {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID   = 2; // id записи в БД
}

// RequestString - параметры запроса на сервер
message RequestString {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1   = 2; // строка поиска
}

// RequestString3 - параметры запроса на сервер
message RequestString3 {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1   = 2; // строка поиска
    string String_2   = 3; // строка поиска
    string String_3   = 4; // строка поиска
}
// RequestExtID - параметры запроса на сервер
message RequestExtID {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ExtID   = 2; // ext_id записи в БД
    int64 Connection_id	=3; // Connection_id записи в БД
}

// RequestModel - параметры запроса на сервер
message RequestModel {
    uint32 VersionModel= 1; //версия структуры модели
    string ModelString = 2; //объект-модель в формате json
}

// RequestInnKpp - параметры запроса на сервер
message RequestInnKpp {
    uint32 VersionModel= 1; //версия структуры модели
    string Inn   = 2; // ИНН
    string Kpp	=3; // КПП
}

// RequestIdId - параметры запроса на сервер
message RequestIdId {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID1   = 2; // id записи в БД
    int64 ID2   = 3; // id записи в БД
}

// RequestIdIdId - параметры запроса на сервер
message RequestIdIdId {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID1   = 2; // id записи в БД
    int64 ID2   = 3; // id записи в БД
    int64 ID3   = 4; // id записи в БД
}

// RequestDate - параметры запроса на сервер, передаётся Дата time.Time
message RequestDate {
    uint32 VersionModel= 1; //версия структуры модели
    google.protobuf.Timestamp Date   = 2; // строка поиска
}

// RequestFloat64 - параметры запроса на сервер, передаётся float64
message RequestFloat64 {
    uint32 VersionModel= 1; //версия структуры модели
    double Float64   = 2; // строка поиска
}

// RequestFloat32 - параметры запроса на сервер, передаётся float32
message RequestFloat32 {
    uint32 VersionModel= 1; //версия структуры модели
    float Float32   = 2; // строка поиска
}

// RequestInt32 - параметры запроса на сервер, передаётся int32
message RequestInt32 {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32   = 2; // строка поиска
}

// RequestBool - параметры запроса на сервер, передаётся bool
message RequestBool {
    uint32 VersionModel= 1; //версия структуры модели
    bool Bool   = 2; // строка поиска
}

//----------------------------- Request_ID -------------------------------------------

// RequestId_Date - параметры запроса на сервер, передаётся ID + Дата time.Time
message RequestId_Date {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    google.protobuf.Timestamp Date = 3; // значение поиска
}

// RequestId_Float64 - параметры запроса на сервер, передаётся ID + float64
message RequestId_Float64 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    double Float64 = 3; // значение поиска
}

// RequestId_Float32 - параметры запроса на сервер, передаётся ID + float32
message RequestId_Float32 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    float Float32 = 3; // значение поиска
}

// RequestId_Int32 - параметры запроса на сервер, передаётся ID + int32
message RequestId_Int32 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    int32 Int32 = 3; // значение поиска
}

// RequestId_Int64 - параметры запроса на сервер, передаётся ID + int64
message RequestId_Int64 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    int64 Int64 = 3; // значение поиска
}

// RequestId_Bool - параметры запроса на сервер, передаётся ID + bool
message RequestId_Bool {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    bool Bool = 3; // значение поиска
}

// RequestId_String - параметры запроса на сервер, передаётся ID + string
message RequestId_String {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID = 2; 	// id записи в БД
    string String_1 = 3; // строка поиска
}

//----------------------------- Request_Int32 -------------------------------------------

// RequestInt32_Date - параметры запроса на сервер, передаётся int32 + Дата time.Time
message RequestInt32_Date {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    google.protobuf.Timestamp Date = 3; // значение поиска
}

// RequestInt32_Float64 - параметры запроса на сервер, передаётся int32 + float64
message RequestInt32_Float64 {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    double Float64 = 3; // значение поиска
}

// RequestInt32_Float32 - параметры запроса на сервер, передаётся int32 + float32
message RequestInt32_Float32 {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    float Float32 = 3; // значение поиска
}

// RequestInt32_Int32 - параметры запроса на сервер, передаётся int32 + int32
message RequestInt32_Int32 {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    int32 Int32_2 = 3; // значение поиска
}

// RequestInt32_Int64 - параметры запроса на сервер, передаётся int32 + int64
message RequestInt32_Int64 {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    int64 Int64 = 3; // значение поиска
}

// RequestInt32_Bool - параметры запроса на сервер, передаётся int32 + bool
message RequestInt32_Bool {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    bool Bool = 3; // значение поиска
}

// RequestInt32_String - параметры запроса на сервер, передаётся int32 + string
message RequestInt32_String {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32 = 2; 	// id записи в БД
    string String_1 = 3; // строка поиска
}

//----------------------------- Request_String -------------------------------------------

// RequestString_Date - параметры запроса на сервер, передаётся string + Дата time.Time
message RequestString_Date {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// ID записи в БД
    google.protobuf.Timestamp Date = 3; // значение поиска
}

// RequestString_Float64 - параметры запроса на сервер, передаётся string + float64
message RequestString_Float64 {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// id записи в БД
    double Float64 = 3; // значение поиска
}

// RequestString_Float32 - параметры запроса на сервер, передаётся string + float32
message RequestString_Float32 {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// id записи в БД
    float Float32 = 3; // значение поиска
}

// RequestString_Int32 - параметры запроса на сервер, передаётся string + int32
message RequestString_Int32 {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// id записи в БД
    int32 Int32 = 3; // значение поиска
}

// RequestString_Int64 - параметры запроса на сервер, передаётся string + int64
message RequestString_Int64 {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// id записи в БД
    int64 Int64 = 3; // значение поиска
}

// RequestString_Bool - параметры запроса на сервер, передаётся string + bool
message RequestString_Bool {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// id записи в БД
    bool Bool = 3; // значение поиска
}

// RequestString_String - параметры запроса на сервер, передаётся string + string
message RequestString_String {
    uint32 VersionModel= 1; //версия структуры модели
    string String_1 = 2; 	// id записи в БД
    string String_2 = 3; // строка поиска
}

//-------------------------------------------------------------------------------------

// Request_Model_MassString - модель и массив строк
message Request_Model_MassString {
    uint32 VersionModel= 1; //версия структуры модели
    string ModelString = 2; //объект-модель в формате json
    repeated string MassNames	= 3; //массив строк
}

// -------------------------- Response ----------------------------------------------

// Response - возвращает строка json Модель
message Response {
    string ModelString 	= 1; //объект-модель в формате json
}

// ResponseFloat64 - возвращает float64
message ResponseFloat64 {
    double Otvet 	= 1; //Ответ - число
}

// ResponseInt64 - возвращает int64
message ResponseInt64 {
    int64 Otvet 	= 1; //Ответ - число
}

// Response - параметры ответа на клиент
message ResponseEmpty {
}

// Response - параметры ответа на клиент
message ResponseMass {
    repeated string MassModelString 	= 1; //массив объект-модель в формате json
}
