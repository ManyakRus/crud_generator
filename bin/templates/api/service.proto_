syntax = "proto3";

/*
    Файл содержит описание сервиса Sync_service
*/


package grpc;

option go_package = "./grpc_proto";

import "google/protobuf/timestamp.proto";

// sync_service - сервис обмена с Базой данных
service Sync_service {
}

// -------------------------- Request ----------------------------------------------

// RequestId - параметры запроса на сервер
message RequestId {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ID   = 2; // id записи в БД
}

// RequestString - параметры запроса на сервер
message RequestString {
    uint32 VersionModel= 1; //версия структуры модели
    string StringFind   = 2; // строка поиска
}

// RequestString3 - параметры запроса на сервер
message RequestString3 {
    uint32 VersionModel= 1; //версия структуры модели
    string StringFind1   = 2; // строка поиска
    string StringFind2   = 3; // строка поиска
    string StringFind3   = 4; // строка поиска
}
// RequestId - параметры запроса на сервер
message RequestExtID {
    uint32 VersionModel= 1; //версия структуры модели
    int64 ExtID   = 2; // ext_id записи в БД
    int64 Connection_id	=3; // Connection_id записи в БД
}

// RequestModel - параметры запроса на сервер
message RequestModel {
    uint32 VersionModel= 1; //версия структуры модели
    string ModelString = 2; //объект-модель в формате json
}

// RequestInnKpp - параметры запроса на сервер
message RequestInnKpp {
    uint32 VersionModel= 1; //версия структуры модели
    string Inn   = 2; // ИНН
    string Kpp	=3; // КПП
}

// RequestIdId - параметры запроса на сервер
message RequestIdId {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD1   = 2; // id записи в БД
    int64 iD2   = 3; // id записи в БД
}

// RequestIdIdId - параметры запроса на сервер
message RequestIdIdId {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD1   = 2; // id записи в БД
    int64 iD2   = 3; // id записи в БД
    int64 iD3   = 4; // id записи в БД
}

// RequestDate - параметры запроса на сервер, передаётся Дата time.Time
message RequestDate {
    uint32 VersionModel= 1; //версия структуры модели
    google.protobuf.Timestamp Date   = 2; // строка поиска
}

// RequestFloat64 - параметры запроса на сервер, передаётся float64
message RequestFloat64 {
    uint32 VersionModel= 1; //версия структуры модели
    double Float64   = 2; // строка поиска
}

// RequestFloat32 - параметры запроса на сервер, передаётся float32
message RequestFloat32 {
    uint32 VersionModel= 1; //версия структуры модели
    float Float32   = 2; // строка поиска
}

// RequestInt32 - параметры запроса на сервер, передаётся int32
message RequestInt32 {
    uint32 VersionModel= 1; //версия структуры модели
    int32 Int32   = 2; // строка поиска
}

// RequestBool - параметры запроса на сервер, передаётся bool
message RequestBool {
    uint32 VersionModel= 1; //версия структуры модели
    bool Bool   = 2; // строка поиска
}


// Request_ID_Date - параметры запроса на сервер, передаётся ID + Дата time.Time
message Request_ID_Date {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    google.protobuf.Timestamp Date = 3; // значение поиска
}

// Request_ID_Float64 - параметры запроса на сервер, передаётся ID + float64
message Request_ID_Float64 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    double Float64 = 3; // значение поиска
}

// Request_ID_Float32 - параметры запроса на сервер, передаётся ID + float32
message Request_ID_Float32 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    float Float32 = 3; // значение поиска
}

// Request_ID_Int32 - параметры запроса на сервер, передаётся ID + int32
message Request_ID_Int32 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    int32 Int32 = 3; // значение поиска
}

// Request_ID_Int64 - параметры запроса на сервер, передаётся ID + int64
message Request_ID_Int64 {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    int64 Int64 = 3; // значение поиска
}

// Request_ID_Bool - параметры запроса на сервер, передаётся ID + bool
message Request_ID_Bool {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    bool Bool = 3; // значение поиска
}

// Request_ID_String - параметры запроса на сервер, передаётся ID + string
message Request_ID_String {
    uint32 VersionModel= 1; //версия структуры модели
    int64 iD = 2; 	// id записи в БД
    string StringFind = 3; // строка поиска
}

// -------------------------- Response ----------------------------------------------

// Response - возвращает строка json Модель
message Response {
    string ModelString 	= 1; //объект-модель в формате json
}
// ResponseFloat64 - возвращает float64
message ResponseFloat64 {
    double Otvet 	= 1; //Ответ - число
}
// ResponseInt64 - возвращает int64
message ResponseInt64 {
    int64 Otvet 	= 1; //Ответ - число
}
// Response - параметры ответа на клиент
message ResponseEmpty {
}
// Response - параметры ответа на клиент
message ResponseMass {
    repeated string MassModelString 	= 1; //массив объект-модель в формате json
}
