// FindBy_FieldNamesWithUnderline - находит запись в БД по FieldNamesWithPlus
func (crud Crud_DB) FindBy_FieldNamesWithUnderline(m *lawsuit_status_types.LawsuitStatusType) error {
	var err error

	ctxMain := context.Background() //операцию надо выполнить, даже при отмене контекста
	//ctxMain := contextmain.GetContext()
	ctx, ctxCancelFunc := context.WithTimeout(ctxMain, time.Second*time.Duration(db_constants.TIMEOUT_DB_SECONDS))
	defer ctxCancelFunc()

	db := postgres_pgxpool.GetConnection()

	err = FindBy_FieldNamesWithUnderline_ctx(ctx, db, m)

	return err
}

// FindBy_FieldNamesWithUnderline_ctx - находит запись в БД по FieldNamesWithPlus
func FindBy_FieldNamesWithUnderline_ctx(ctx context.Context, db postgres_pgx.IConnectionTransaction, m *lawsuit_status_types.LawsuitStatusType) error {
	var err error

	//количество невыполненных операций +1 -1
	atomic.AddInt32(&stopapp.TotalMessagesSendingNow, 1)
	defer atomic.AddInt32(&stopapp.TotalMessagesSendingNow, -1)

	//
	if ctx.Err() != nil {
		err = ctx.Err()
		return err
	}

	//
	TextSQL := TextSQL_Read + `
WHERE 1=1
ReplaceWhereID
`

	//
	row := db.QueryRow(ctx, TextSQL, ReplaceFieldsWithComma)
	err = row.Scan(ReplaceAllFieldsWithComma)
	if err != nil {
		err = fmt.Errorf(m.TableNameDB()+" FindBy_FieldNamesWithUnderline() ReplaceFieldNamesFormat, error: %w", ReplaceFieldsWithComma, err)
		return err
	}

	return err
}

