package crud_lawsuit_status_types

import (
	"github.com/ManyakRus/starter/config_main"
	"github.com/ManyakRus/starter/postgres_pgxpool"
	"gitlab.aescorp.ru/dsp_dev/claim/sync_service/pkg/object_model/entities/lawsuit_status_types"
	"gitlab.aescorp.ru/dsp_dev/claim/sync_service/pkg/constants"
	"gitlab.aescorp.ru/dsp_dev/claim/sync_service/pkg/db/crud_func"
	"testing"
)


func TestUpdateManyFields(t *testing.T) {
	config_main.LoadEnv()

	postgres_pgxpool.Connect_NoNull(constants.SERVICE_NAME + "_test")
	defer postgres_pgxpool.CloseConnection()

	//прочитаем из БД
	crud := Crud_DB{}
	m := lawsuit_status_types.LawsuitStatusType{}
	m.ID = Postgres_ID_Test
	err := crud.Read(&m)
	if err != nil {
		if crud_func.IsRecordNotFound(err) == true {
			return
		}
		t.Error("TestUpdateManyFields() Read() error: ", err)
	}

	//
	MassNeedUpdateField := make([]string, 0)
	MassNeedUpdateField = append(MassNeedUpdateField, "ReplacePKColumnName")

	//запишем в БД это же значение
	err = crud.UpdateManyFields(&m, MassNeedUpdateField)
	if err != nil {
		t.Error("TestUpdateManyFields() UpdateManyFields() error: ", err)
	}
}
