package grpc_lawsuit_status_types

import (
	"github.com/ManyakRus/starter/config_main"
	"gitlab.aescorp.ru/dsp_dev/claim/sync_service/pkg/network/grpc/grpc_client"
	"gitlab.aescorp.ru/dsp_dev/claim/sync_service/pkg/object_model/entities/lawsuit_status_types"
	"testing"
)

func TestCrud_GRPC_UpdateManyFields(t *testing.T) {
	t.SkipNow() //универсально не сделаешь

	config_main.LoadEnv()
	grpc_client.Connect()
	defer grpc_client.CloseConnection()

	//прочитаем из БД
	crud := grpc_lawsuit_status_types.Crud_GRPC{}
	Otvet := lawsuit_status_types.LawsuitStatusType{}
	Otvet.ID = Postgres_ID_Test
	err := crud.Read(&Otvet)
	if err != nil {
		t.Error("TestCrud_GRPC_UpdateManyFields() error: ", err)
		return
	}

	//
	MassFields := make([]string, 0)

	//запишем в БД
	err = crud.UpdateManyFields(&Otvet, MassFields)

	if err != nil {
		t.Error("TestCrud_GRPC_UpdateManyFields() error: ", err)
	}

	if IntFromAlias(Otvet.ID) == 0 {
		t.Error("TestCrud_GRPC_UpdateManyFields() error: ID =0")
	}
}

