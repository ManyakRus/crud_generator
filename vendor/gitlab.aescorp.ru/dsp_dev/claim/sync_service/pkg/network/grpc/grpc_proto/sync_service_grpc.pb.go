// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: sync_service.proto

package grpc_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SyncServiceClient is the client API for SyncService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SyncServiceClient interface {
	AccountingArea_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	AccountingArea_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	AccrualType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Balance_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Balance_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Balance_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Balance_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Balance_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	Balance_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Balance_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	BankAccountOrganization_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Bank_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Bank_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Bank_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Bank_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Bank_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	Bank_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Bank_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	BillKindType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Branch_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Branch_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Branch_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Branch_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Branch_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Branch_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Calendar_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Calendar_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Calendar_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Calendar_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Calendar_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Calendar_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ChangeItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ChannelType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ClaimType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Comment_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Comment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Comment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Comment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Comment_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Comment_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	CompletedMonth_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractBlackItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractCategoryType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ContractWhiteItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Contract_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Contract_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Contract_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Contract_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Contract_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	Contract_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Contract_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Court_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Court_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Court_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Court_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Court_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Court_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DayType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DayType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DayType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DayType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DayType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DayType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DebtType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DebtType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DebtType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DebtType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DebtType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	DebtType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DebtType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DirectionType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentLinkType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentLink_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	DocumentType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	DocumentType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Document_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Document_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Document_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Document_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Document_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	Document_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Document_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	EventType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	EventType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EventType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EventType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	EventType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	EventType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Event_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Event_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Event_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Event_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Event_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Event_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Facsimile_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileChange_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileChange_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileChange_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileChange_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileTemplate_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	FileType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	FileType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	GenderType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	GenderType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	GenderType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	GenderType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	GenderType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	GenderType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	HashtagLink_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	HashtagLink_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	HashtagLink_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	HashtagLink_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	HashtagLink_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	HashtagLink_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Hashtag_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Individual_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Individual_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Individual_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Individual_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Individual_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	Individual_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Individual_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	InvoiceDebtTypeStat_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoiceCorrection_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitInvoice_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitPaymentCorrection_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitPayment_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitReasonType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStageType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	LegalType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LegalType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LegalType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LegalType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LegalType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LegalType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatus_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCategoryType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationStateType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Organization_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PaymentDay_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PaymentSchedule_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	PenaltyCalculationItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ServiceProvider_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	ServiceType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	ServiceType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	StateDuty_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	TableName_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	TableName_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TableName_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TableName_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	TableName_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	TableName_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	UserRole_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	UserRole_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRole_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRole_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	UserRole_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	UserRole_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	WhiteListReasonType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Organization_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Organization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Organization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Organization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Organization_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Organization_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Organization_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error)
	Organization_FindByExtId(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	File_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	File_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	File_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	File_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	File_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	File_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	File_FindByFileID(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	File_FindByFullName(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_FindByInn(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	OrganizationCasebook_FindByOrganizationId(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Connection_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Connection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Connection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Connection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Employee_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Employee_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Employee_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByExtId(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByLogin(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByEMail(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error)
	Employee_FindByFIO(ctx context.Context, in *RequestString3, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusState_FillFromLawsuit(ctx context.Context, in *RequestIdId, opts ...grpc.CallOption) (*ResponseEmpty, error)
	LawsuitStatusState_FindDebtSum(ctx context.Context, in *RequestIdId, opts ...grpc.CallOption) (*ResponseFloat64, error)
	LawsuitStatusType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	LawsuitStatusType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Lawsuit_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageAttachement_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatuse_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatuse_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatuse_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatuse_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatuse_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageSendStatuse_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	MessageType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	MessageType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Message_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Message_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Message_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Message_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error)
	Message_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Message_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error)
	Message_FindBy_LawsuitID_MessageTypeID(ctx context.Context, in *RequestIdId, opts ...grpc.CallOption) (*Response, error)
}

type syncServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSyncServiceClient(cc grpc.ClientConnInterface) SyncServiceClient {
	return &syncServiceClient{cc}
}

func (c *syncServiceClient) AccountingArea_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccountingArea_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccountingArea_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccountingArea_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccountingArea_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccountingArea_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccountingArea_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccountingArea_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccrualType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccrualType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccrualType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccrualType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccrualType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccrualType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccrualType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccrualType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccrualType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccrualType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) AccrualType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/AccrualType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Balance_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Balance_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BankAccountOrganization_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BankAccountOrganization_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Bank_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Bank_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BillKindType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BillKindType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BillKindType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BillKindType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BillKindType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BillKindType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BillKindType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BillKindType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BillKindType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BillKindType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) BillKindType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/BillKindType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Branch_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Branch_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Branch_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Branch_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Branch_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Branch_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Branch_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Branch_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Branch_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Branch_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Branch_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Branch_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Calendar_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Calendar_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Calendar_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Calendar_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Calendar_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Calendar_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Calendar_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Calendar_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Calendar_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Calendar_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Calendar_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Calendar_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChangeItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChangeItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChangeItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChangeItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChangeItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChangeItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChangeItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChangeItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChangeItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChangeItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChangeItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChangeItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChannelType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChannelType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChannelType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChannelType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChannelType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChannelType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChannelType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChannelType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChannelType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChannelType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ChannelType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ChannelType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ClaimType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ClaimType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ClaimType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ClaimType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ClaimType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ClaimType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ClaimType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ClaimType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ClaimType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ClaimType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ClaimType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ClaimType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Comment_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Comment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Comment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Comment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Comment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Comment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Comment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Comment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Comment_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Comment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Comment_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Comment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) CompletedMonth_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/CompletedMonth_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractBlackItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractBlackItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractBlackItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractBlackItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractBlackItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractBlackItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractBlackItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractBlackItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractBlackItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractBlackItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractBlackItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractBlackItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractCategoryType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractCategoryType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractWhiteItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractWhiteItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractWhiteItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractWhiteItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractWhiteItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractWhiteItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractWhiteItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractWhiteItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractWhiteItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractWhiteItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ContractWhiteItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ContractWhiteItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Contract_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Contract_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Court_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Court_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Court_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Court_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Court_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Court_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Court_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Court_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Court_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Court_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Court_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Court_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DayType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DayType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DayType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DayType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DayType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DayType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DayType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DayType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DayType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DayType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DayType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DayType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DebtType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DebtType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DirectionType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DirectionType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DirectionType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DirectionType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DirectionType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DirectionType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DirectionType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DirectionType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DirectionType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DirectionType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DirectionType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DirectionType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLinkType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLinkType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLinkType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLinkType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLinkType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLinkType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLinkType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLinkType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLinkType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLinkType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLinkType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLinkType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentLink_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentLink_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) DocumentType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/DocumentType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Document_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Document_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) EventType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/EventType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) EventType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/EventType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) EventType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/EventType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) EventType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/EventType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) EventType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/EventType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) EventType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/EventType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Event_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Event_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Event_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Event_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Event_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Event_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Event_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Event_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Event_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Event_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Event_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Event_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Facsimile_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Facsimile_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Facsimile_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Facsimile_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Facsimile_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Facsimile_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Facsimile_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Facsimile_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Facsimile_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Facsimile_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Facsimile_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Facsimile_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileChange_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileChange_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileChange_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileChange_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileChange_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileChange_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileChange_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileChange_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileTemplate_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileTemplate_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileTemplate_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileTemplate_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileTemplate_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileTemplate_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileTemplate_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileTemplate_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileTemplate_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileTemplate_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileTemplate_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileTemplate_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) FileType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/FileType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) GenderType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/GenderType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) GenderType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/GenderType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) GenderType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/GenderType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) GenderType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/GenderType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) GenderType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/GenderType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) GenderType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/GenderType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) HashtagLink_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/HashtagLink_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) HashtagLink_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/HashtagLink_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) HashtagLink_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/HashtagLink_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) HashtagLink_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/HashtagLink_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) HashtagLink_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/HashtagLink_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) HashtagLink_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/HashtagLink_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Hashtag_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Hashtag_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Hashtag_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Hashtag_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Hashtag_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Hashtag_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Hashtag_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Hashtag_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Hashtag_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Hashtag_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Hashtag_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Hashtag_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Individual_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Individual_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) InvoiceDebtTypeStat_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/InvoiceDebtTypeStat_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) InvoiceDebtTypeStat_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/InvoiceDebtTypeStat_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) InvoiceDebtTypeStat_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/InvoiceDebtTypeStat_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) InvoiceDebtTypeStat_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/InvoiceDebtTypeStat_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) InvoiceDebtTypeStat_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/InvoiceDebtTypeStat_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) InvoiceDebtTypeStat_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/InvoiceDebtTypeStat_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoiceCorrection_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoiceCorrection_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoiceCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoiceCorrection_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoiceCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoiceCorrection_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoiceCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoiceCorrection_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoiceCorrection_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoiceCorrection_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoiceCorrection_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoiceCorrection_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoice_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoice_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoice_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoice_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoice_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoice_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoice_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoice_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoice_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoice_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitInvoice_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitInvoice_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPaymentCorrection_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPaymentCorrection_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPaymentCorrection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPaymentCorrection_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPaymentCorrection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPaymentCorrection_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPaymentCorrection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPaymentCorrection_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPaymentCorrection_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPaymentCorrection_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPaymentCorrection_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPaymentCorrection_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPayment_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPayment_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPayment_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPayment_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPayment_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPayment_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPayment_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPayment_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPayment_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPayment_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitPayment_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitPayment_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitReasonType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitReasonType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitReasonType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitReasonType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitReasonType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitReasonType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitReasonType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitReasonType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitReasonType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStageType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStageType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStageType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStageType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStageType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStageType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStageType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStageType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStageType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LegalType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LegalType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LegalType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LegalType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LegalType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LegalType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LegalType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LegalType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LegalType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LegalType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LegalType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LegalType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatus_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatus_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatus_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatus_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatus_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatus_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatus_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatus_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatus_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatus_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatus_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatus_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCategoryType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCategoryType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationStateType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationStateType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationStateType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationStateType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationStateType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationStateType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationStateType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationStateType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationStateType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationStateType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationStateType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationStateType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentDay_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentDay_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PaymentSchedule_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PaymentSchedule_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) PenaltyCalculationItem_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/PenaltyCalculationItem_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceProvider_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceProvider_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_FindByExtID(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_FindByExtID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) ServiceType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/ServiceType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StateDuty_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/StateDuty_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StateDuty_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/StateDuty_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StateDuty_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/StateDuty_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StateDuty_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/StateDuty_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StateDuty_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/StateDuty_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) StateDuty_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/StateDuty_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) TableName_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/TableName_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) TableName_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/TableName_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) TableName_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/TableName_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) TableName_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/TableName_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) TableName_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/TableName_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) TableName_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/TableName_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UserRole_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/UserRole_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UserRole_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/UserRole_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UserRole_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/UserRole_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UserRole_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/UserRole_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UserRole_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/UserRole_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) UserRole_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/UserRole_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) WhiteListReasonType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/WhiteListReasonType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) WhiteListReasonType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/WhiteListReasonType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) WhiteListReasonType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/WhiteListReasonType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) WhiteListReasonType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/WhiteListReasonType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) WhiteListReasonType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/WhiteListReasonType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) WhiteListReasonType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/WhiteListReasonType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_FindByInnKpp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Organization_FindByExtId(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Organization_FindByExtId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_FindByFileID(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_FindByFileID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) File_FindByFullName(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/File_FindByFullName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_FindByInnKpp(ctx context.Context, in *RequestInnKpp, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_FindByInnKpp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_FindByInn(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_FindByInn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) OrganizationCasebook_FindByOrganizationId(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/OrganizationCasebook_FindByOrganizationId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Connection_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Connection_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Connection_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Connection_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Connection_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Connection_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Connection_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Connection_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_FindByExtId(ctx context.Context, in *RequestExtId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_FindByExtId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_FindByLogin(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_FindByLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_FindByEMail(ctx context.Context, in *RequestString, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_FindByEMail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Employee_FindByFIO(ctx context.Context, in *RequestString3, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Employee_FindByFIO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_FillFromLawsuit(ctx context.Context, in *RequestIdId, opts ...grpc.CallOption) (*ResponseEmpty, error) {
	out := new(ResponseEmpty)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_FillFromLawsuit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusState_FindDebtSum(ctx context.Context, in *RequestIdId, opts ...grpc.CallOption) (*ResponseFloat64, error) {
	out := new(ResponseFloat64)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusState_FindDebtSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) LawsuitStatusType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/LawsuitStatusType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Lawsuit_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Lawsuit_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageAttachement_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageAttachement_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageAttachement_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageAttachement_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageAttachement_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageAttachement_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageAttachement_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageAttachement_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageAttachement_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageAttachement_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageAttachement_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageAttachement_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatuse_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatuse_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatuse_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatuse_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatuse_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatuse_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatuse_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatuse_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatuse_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatuse_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageSendStatuse_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageSendStatuse_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageType_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageType_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageType_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageType_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageType_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageType_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageType_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageType_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageType_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageType_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) MessageType_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/MessageType_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_Read(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_Create(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_Update(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_Save(ctx context.Context, in *RequestModel, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_Delete(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_Restore(ctx context.Context, in *RequestId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *syncServiceClient) Message_FindBy_LawsuitID_MessageTypeID(ctx context.Context, in *RequestIdId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Sync_service/Message_FindBy_LawsuitID_MessageTypeID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SyncServiceServer is the server API for SyncService service.
// All implementations must embed UnimplementedSyncServiceServer
// for forward compatibility
type SyncServiceServer interface {
	AccountingArea_Read(context.Context, *RequestId) (*Response, error)
	AccountingArea_Create(context.Context, *RequestModel) (*Response, error)
	AccountingArea_Update(context.Context, *RequestModel) (*Response, error)
	AccountingArea_Save(context.Context, *RequestModel) (*Response, error)
	AccountingArea_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	AccountingArea_Delete(context.Context, *RequestId) (*Response, error)
	AccountingArea_Restore(context.Context, *RequestId) (*Response, error)
	AccrualType_Read(context.Context, *RequestId) (*Response, error)
	AccrualType_Create(context.Context, *RequestModel) (*Response, error)
	AccrualType_Update(context.Context, *RequestModel) (*Response, error)
	AccrualType_Save(context.Context, *RequestModel) (*Response, error)
	AccrualType_Delete(context.Context, *RequestId) (*Response, error)
	AccrualType_Restore(context.Context, *RequestId) (*Response, error)
	Balance_Read(context.Context, *RequestId) (*Response, error)
	Balance_Create(context.Context, *RequestModel) (*Response, error)
	Balance_Update(context.Context, *RequestModel) (*Response, error)
	Balance_Save(context.Context, *RequestModel) (*Response, error)
	Balance_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	Balance_Delete(context.Context, *RequestId) (*Response, error)
	Balance_Restore(context.Context, *RequestId) (*Response, error)
	BankAccountOrganization_Read(context.Context, *RequestId) (*Response, error)
	BankAccountOrganization_Create(context.Context, *RequestModel) (*Response, error)
	BankAccountOrganization_Update(context.Context, *RequestModel) (*Response, error)
	BankAccountOrganization_Save(context.Context, *RequestModel) (*Response, error)
	BankAccountOrganization_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	BankAccountOrganization_Delete(context.Context, *RequestId) (*Response, error)
	BankAccountOrganization_Restore(context.Context, *RequestId) (*Response, error)
	Bank_Read(context.Context, *RequestId) (*Response, error)
	Bank_Create(context.Context, *RequestModel) (*Response, error)
	Bank_Update(context.Context, *RequestModel) (*Response, error)
	Bank_Save(context.Context, *RequestModel) (*Response, error)
	Bank_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	Bank_Delete(context.Context, *RequestId) (*Response, error)
	Bank_Restore(context.Context, *RequestId) (*Response, error)
	BillKindType_Read(context.Context, *RequestId) (*Response, error)
	BillKindType_Create(context.Context, *RequestModel) (*Response, error)
	BillKindType_Update(context.Context, *RequestModel) (*Response, error)
	BillKindType_Save(context.Context, *RequestModel) (*Response, error)
	BillKindType_Delete(context.Context, *RequestId) (*Response, error)
	BillKindType_Restore(context.Context, *RequestId) (*Response, error)
	Branch_Read(context.Context, *RequestId) (*Response, error)
	Branch_Create(context.Context, *RequestModel) (*Response, error)
	Branch_Update(context.Context, *RequestModel) (*Response, error)
	Branch_Save(context.Context, *RequestModel) (*Response, error)
	Branch_Delete(context.Context, *RequestId) (*Response, error)
	Branch_Restore(context.Context, *RequestId) (*Response, error)
	Calendar_Read(context.Context, *RequestId) (*Response, error)
	Calendar_Create(context.Context, *RequestModel) (*Response, error)
	Calendar_Update(context.Context, *RequestModel) (*Response, error)
	Calendar_Save(context.Context, *RequestModel) (*Response, error)
	Calendar_Delete(context.Context, *RequestId) (*Response, error)
	Calendar_Restore(context.Context, *RequestId) (*Response, error)
	ChangeItem_Read(context.Context, *RequestId) (*Response, error)
	ChangeItem_Create(context.Context, *RequestModel) (*Response, error)
	ChangeItem_Update(context.Context, *RequestModel) (*Response, error)
	ChangeItem_Save(context.Context, *RequestModel) (*Response, error)
	ChangeItem_Delete(context.Context, *RequestId) (*Response, error)
	ChangeItem_Restore(context.Context, *RequestId) (*Response, error)
	ChannelType_Read(context.Context, *RequestId) (*Response, error)
	ChannelType_Create(context.Context, *RequestModel) (*Response, error)
	ChannelType_Update(context.Context, *RequestModel) (*Response, error)
	ChannelType_Save(context.Context, *RequestModel) (*Response, error)
	ChannelType_Delete(context.Context, *RequestId) (*Response, error)
	ChannelType_Restore(context.Context, *RequestId) (*Response, error)
	ClaimType_Read(context.Context, *RequestId) (*Response, error)
	ClaimType_Create(context.Context, *RequestModel) (*Response, error)
	ClaimType_Update(context.Context, *RequestModel) (*Response, error)
	ClaimType_Save(context.Context, *RequestModel) (*Response, error)
	ClaimType_Delete(context.Context, *RequestId) (*Response, error)
	ClaimType_Restore(context.Context, *RequestId) (*Response, error)
	Comment_Read(context.Context, *RequestId) (*Response, error)
	Comment_Create(context.Context, *RequestModel) (*Response, error)
	Comment_Update(context.Context, *RequestModel) (*Response, error)
	Comment_Save(context.Context, *RequestModel) (*Response, error)
	Comment_Delete(context.Context, *RequestId) (*Response, error)
	Comment_Restore(context.Context, *RequestId) (*Response, error)
	CompletedMonth_Read(context.Context, *RequestId) (*Response, error)
	CompletedMonth_Create(context.Context, *RequestModel) (*Response, error)
	CompletedMonth_Update(context.Context, *RequestModel) (*Response, error)
	CompletedMonth_Save(context.Context, *RequestModel) (*Response, error)
	CompletedMonth_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	CompletedMonth_Delete(context.Context, *RequestId) (*Response, error)
	CompletedMonth_Restore(context.Context, *RequestId) (*Response, error)
	ContractBlackItem_Read(context.Context, *RequestId) (*Response, error)
	ContractBlackItem_Create(context.Context, *RequestModel) (*Response, error)
	ContractBlackItem_Update(context.Context, *RequestModel) (*Response, error)
	ContractBlackItem_Save(context.Context, *RequestModel) (*Response, error)
	ContractBlackItem_Delete(context.Context, *RequestId) (*Response, error)
	ContractBlackItem_Restore(context.Context, *RequestId) (*Response, error)
	ContractCategoryType_Read(context.Context, *RequestId) (*Response, error)
	ContractCategoryType_Create(context.Context, *RequestModel) (*Response, error)
	ContractCategoryType_Update(context.Context, *RequestModel) (*Response, error)
	ContractCategoryType_Save(context.Context, *RequestModel) (*Response, error)
	ContractCategoryType_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	ContractCategoryType_Delete(context.Context, *RequestId) (*Response, error)
	ContractCategoryType_Restore(context.Context, *RequestId) (*Response, error)
	ContractWhiteItem_Read(context.Context, *RequestId) (*Response, error)
	ContractWhiteItem_Create(context.Context, *RequestModel) (*Response, error)
	ContractWhiteItem_Update(context.Context, *RequestModel) (*Response, error)
	ContractWhiteItem_Save(context.Context, *RequestModel) (*Response, error)
	ContractWhiteItem_Delete(context.Context, *RequestId) (*Response, error)
	ContractWhiteItem_Restore(context.Context, *RequestId) (*Response, error)
	Contract_Read(context.Context, *RequestId) (*Response, error)
	Contract_Create(context.Context, *RequestModel) (*Response, error)
	Contract_Update(context.Context, *RequestModel) (*Response, error)
	Contract_Save(context.Context, *RequestModel) (*Response, error)
	Contract_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	Contract_Delete(context.Context, *RequestId) (*Response, error)
	Contract_Restore(context.Context, *RequestId) (*Response, error)
	Court_Read(context.Context, *RequestId) (*Response, error)
	Court_Create(context.Context, *RequestModel) (*Response, error)
	Court_Update(context.Context, *RequestModel) (*Response, error)
	Court_Save(context.Context, *RequestModel) (*Response, error)
	Court_Delete(context.Context, *RequestId) (*Response, error)
	Court_Restore(context.Context, *RequestId) (*Response, error)
	DayType_Read(context.Context, *RequestId) (*Response, error)
	DayType_Create(context.Context, *RequestModel) (*Response, error)
	DayType_Update(context.Context, *RequestModel) (*Response, error)
	DayType_Save(context.Context, *RequestModel) (*Response, error)
	DayType_Delete(context.Context, *RequestId) (*Response, error)
	DayType_Restore(context.Context, *RequestId) (*Response, error)
	DebtType_Read(context.Context, *RequestId) (*Response, error)
	DebtType_Create(context.Context, *RequestModel) (*Response, error)
	DebtType_Update(context.Context, *RequestModel) (*Response, error)
	DebtType_Save(context.Context, *RequestModel) (*Response, error)
	DebtType_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	DebtType_Delete(context.Context, *RequestId) (*Response, error)
	DebtType_Restore(context.Context, *RequestId) (*Response, error)
	DirectionType_Read(context.Context, *RequestId) (*Response, error)
	DirectionType_Create(context.Context, *RequestModel) (*Response, error)
	DirectionType_Update(context.Context, *RequestModel) (*Response, error)
	DirectionType_Save(context.Context, *RequestModel) (*Response, error)
	DirectionType_Delete(context.Context, *RequestId) (*Response, error)
	DirectionType_Restore(context.Context, *RequestId) (*Response, error)
	DocumentLinkType_Read(context.Context, *RequestId) (*Response, error)
	DocumentLinkType_Create(context.Context, *RequestModel) (*Response, error)
	DocumentLinkType_Update(context.Context, *RequestModel) (*Response, error)
	DocumentLinkType_Save(context.Context, *RequestModel) (*Response, error)
	DocumentLinkType_Delete(context.Context, *RequestId) (*Response, error)
	DocumentLinkType_Restore(context.Context, *RequestId) (*Response, error)
	DocumentLink_Read(context.Context, *RequestId) (*Response, error)
	DocumentLink_Create(context.Context, *RequestModel) (*Response, error)
	DocumentLink_Update(context.Context, *RequestModel) (*Response, error)
	DocumentLink_Save(context.Context, *RequestModel) (*Response, error)
	DocumentLink_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	DocumentLink_Delete(context.Context, *RequestId) (*Response, error)
	DocumentLink_Restore(context.Context, *RequestId) (*Response, error)
	DocumentType_Read(context.Context, *RequestId) (*Response, error)
	DocumentType_Create(context.Context, *RequestModel) (*Response, error)
	DocumentType_Update(context.Context, *RequestModel) (*Response, error)
	DocumentType_Save(context.Context, *RequestModel) (*Response, error)
	DocumentType_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	DocumentType_Delete(context.Context, *RequestId) (*Response, error)
	DocumentType_Restore(context.Context, *RequestId) (*Response, error)
	Document_Read(context.Context, *RequestId) (*Response, error)
	Document_Create(context.Context, *RequestModel) (*Response, error)
	Document_Update(context.Context, *RequestModel) (*Response, error)
	Document_Save(context.Context, *RequestModel) (*Response, error)
	Document_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	Document_Delete(context.Context, *RequestId) (*Response, error)
	Document_Restore(context.Context, *RequestId) (*Response, error)
	Employee_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	EventType_Read(context.Context, *RequestId) (*Response, error)
	EventType_Create(context.Context, *RequestModel) (*Response, error)
	EventType_Update(context.Context, *RequestModel) (*Response, error)
	EventType_Save(context.Context, *RequestModel) (*Response, error)
	EventType_Delete(context.Context, *RequestId) (*Response, error)
	EventType_Restore(context.Context, *RequestId) (*Response, error)
	Event_Read(context.Context, *RequestId) (*Response, error)
	Event_Create(context.Context, *RequestModel) (*Response, error)
	Event_Update(context.Context, *RequestModel) (*Response, error)
	Event_Save(context.Context, *RequestModel) (*Response, error)
	Event_Delete(context.Context, *RequestId) (*Response, error)
	Event_Restore(context.Context, *RequestId) (*Response, error)
	Facsimile_Read(context.Context, *RequestId) (*Response, error)
	Facsimile_Create(context.Context, *RequestModel) (*Response, error)
	Facsimile_Update(context.Context, *RequestModel) (*Response, error)
	Facsimile_Save(context.Context, *RequestModel) (*Response, error)
	Facsimile_Delete(context.Context, *RequestId) (*Response, error)
	Facsimile_Restore(context.Context, *RequestId) (*Response, error)
	FileChange_Read(context.Context, *RequestId) (*Response, error)
	FileChange_Create(context.Context, *RequestModel) (*Response, error)
	FileChange_Update(context.Context, *RequestModel) (*Response, error)
	FileChange_Save(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Read(context.Context, *RequestId) (*Response, error)
	FileTemplate_Create(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Update(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Save(context.Context, *RequestModel) (*Response, error)
	FileTemplate_Delete(context.Context, *RequestId) (*Response, error)
	FileTemplate_Restore(context.Context, *RequestId) (*Response, error)
	FileType_Read(context.Context, *RequestId) (*Response, error)
	FileType_Create(context.Context, *RequestModel) (*Response, error)
	FileType_Update(context.Context, *RequestModel) (*Response, error)
	FileType_Save(context.Context, *RequestModel) (*Response, error)
	FileType_Delete(context.Context, *RequestId) (*Response, error)
	FileType_Restore(context.Context, *RequestId) (*Response, error)
	GenderType_Read(context.Context, *RequestId) (*Response, error)
	GenderType_Create(context.Context, *RequestModel) (*Response, error)
	GenderType_Update(context.Context, *RequestModel) (*Response, error)
	GenderType_Save(context.Context, *RequestModel) (*Response, error)
	GenderType_Delete(context.Context, *RequestId) (*Response, error)
	GenderType_Restore(context.Context, *RequestId) (*Response, error)
	HashtagLink_Read(context.Context, *RequestId) (*Response, error)
	HashtagLink_Create(context.Context, *RequestModel) (*Response, error)
	HashtagLink_Update(context.Context, *RequestModel) (*Response, error)
	HashtagLink_Save(context.Context, *RequestModel) (*Response, error)
	HashtagLink_Delete(context.Context, *RequestId) (*Response, error)
	HashtagLink_Restore(context.Context, *RequestId) (*Response, error)
	Hashtag_Read(context.Context, *RequestId) (*Response, error)
	Hashtag_Create(context.Context, *RequestModel) (*Response, error)
	Hashtag_Update(context.Context, *RequestModel) (*Response, error)
	Hashtag_Save(context.Context, *RequestModel) (*Response, error)
	Hashtag_Delete(context.Context, *RequestId) (*Response, error)
	Hashtag_Restore(context.Context, *RequestId) (*Response, error)
	Individual_Read(context.Context, *RequestId) (*Response, error)
	Individual_Create(context.Context, *RequestModel) (*Response, error)
	Individual_Update(context.Context, *RequestModel) (*Response, error)
	Individual_Save(context.Context, *RequestModel) (*Response, error)
	Individual_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	Individual_Delete(context.Context, *RequestId) (*Response, error)
	Individual_Restore(context.Context, *RequestId) (*Response, error)
	InvoiceDebtTypeStat_Read(context.Context, *RequestId) (*Response, error)
	InvoiceDebtTypeStat_Create(context.Context, *RequestModel) (*Response, error)
	InvoiceDebtTypeStat_Update(context.Context, *RequestModel) (*Response, error)
	InvoiceDebtTypeStat_Save(context.Context, *RequestModel) (*Response, error)
	InvoiceDebtTypeStat_Delete(context.Context, *RequestId) (*Response, error)
	InvoiceDebtTypeStat_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitInvoiceCorrection_Read(context.Context, *RequestId) (*Response, error)
	LawsuitInvoiceCorrection_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoiceCorrection_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoiceCorrection_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoiceCorrection_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitInvoiceCorrection_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitInvoice_Read(context.Context, *RequestId) (*Response, error)
	LawsuitInvoice_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoice_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoice_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitInvoice_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitInvoice_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitPaymentCorrection_Read(context.Context, *RequestId) (*Response, error)
	LawsuitPaymentCorrection_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitPaymentCorrection_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitPaymentCorrection_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitPaymentCorrection_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitPaymentCorrection_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitPayment_Read(context.Context, *RequestId) (*Response, error)
	LawsuitPayment_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitPayment_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitPayment_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitPayment_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitPayment_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitReasonType_Read(context.Context, *RequestId) (*Response, error)
	LawsuitReasonType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitReasonType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitReasonType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitReasonType_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitReasonType_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitStageType_Read(context.Context, *RequestId) (*Response, error)
	LawsuitStageType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitStageType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitStageType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitStageType_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitStageType_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitType_Read(context.Context, *RequestId) (*Response, error)
	LawsuitType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitType_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitType_Restore(context.Context, *RequestId) (*Response, error)
	Lawsuit_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	LegalType_Read(context.Context, *RequestId) (*Response, error)
	LegalType_Create(context.Context, *RequestModel) (*Response, error)
	LegalType_Update(context.Context, *RequestModel) (*Response, error)
	LegalType_Save(context.Context, *RequestModel) (*Response, error)
	LegalType_Delete(context.Context, *RequestId) (*Response, error)
	LegalType_Restore(context.Context, *RequestId) (*Response, error)
	MessageSendStatus_Read(context.Context, *RequestId) (*Response, error)
	MessageSendStatus_Create(context.Context, *RequestModel) (*Response, error)
	MessageSendStatus_Update(context.Context, *RequestModel) (*Response, error)
	MessageSendStatus_Save(context.Context, *RequestModel) (*Response, error)
	MessageSendStatus_Delete(context.Context, *RequestId) (*Response, error)
	MessageSendStatus_Restore(context.Context, *RequestId) (*Response, error)
	OrganizationCategoryType_Read(context.Context, *RequestId) (*Response, error)
	OrganizationCategoryType_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationCategoryType_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationCategoryType_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationCategoryType_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	OrganizationCategoryType_Delete(context.Context, *RequestId) (*Response, error)
	OrganizationCategoryType_Restore(context.Context, *RequestId) (*Response, error)
	OrganizationStateType_Read(context.Context, *RequestId) (*Response, error)
	OrganizationStateType_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationStateType_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationStateType_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationStateType_Delete(context.Context, *RequestId) (*Response, error)
	OrganizationStateType_Restore(context.Context, *RequestId) (*Response, error)
	Organization_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	PaymentDay_Read(context.Context, *RequestId) (*Response, error)
	PaymentDay_Create(context.Context, *RequestModel) (*Response, error)
	PaymentDay_Update(context.Context, *RequestModel) (*Response, error)
	PaymentDay_Save(context.Context, *RequestModel) (*Response, error)
	PaymentDay_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	PaymentDay_Delete(context.Context, *RequestId) (*Response, error)
	PaymentDay_Restore(context.Context, *RequestId) (*Response, error)
	PaymentSchedule_Read(context.Context, *RequestId) (*Response, error)
	PaymentSchedule_Create(context.Context, *RequestModel) (*Response, error)
	PaymentSchedule_Update(context.Context, *RequestModel) (*Response, error)
	PaymentSchedule_Save(context.Context, *RequestModel) (*Response, error)
	PaymentSchedule_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	PaymentSchedule_Delete(context.Context, *RequestId) (*Response, error)
	PaymentSchedule_Restore(context.Context, *RequestId) (*Response, error)
	PenaltyCalculationItem_Read(context.Context, *RequestId) (*Response, error)
	PenaltyCalculationItem_Create(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItem_Update(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItem_Save(context.Context, *RequestModel) (*Response, error)
	PenaltyCalculationItem_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	PenaltyCalculationItem_Delete(context.Context, *RequestId) (*Response, error)
	PenaltyCalculationItem_Restore(context.Context, *RequestId) (*Response, error)
	ServiceProvider_Read(context.Context, *RequestId) (*Response, error)
	ServiceProvider_Create(context.Context, *RequestModel) (*Response, error)
	ServiceProvider_Update(context.Context, *RequestModel) (*Response, error)
	ServiceProvider_Save(context.Context, *RequestModel) (*Response, error)
	ServiceProvider_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	ServiceProvider_Delete(context.Context, *RequestId) (*Response, error)
	ServiceProvider_Restore(context.Context, *RequestId) (*Response, error)
	ServiceType_Read(context.Context, *RequestId) (*Response, error)
	ServiceType_Create(context.Context, *RequestModel) (*Response, error)
	ServiceType_Update(context.Context, *RequestModel) (*Response, error)
	ServiceType_Save(context.Context, *RequestModel) (*Response, error)
	ServiceType_FindByExtID(context.Context, *RequestExtId) (*Response, error)
	ServiceType_Delete(context.Context, *RequestId) (*Response, error)
	ServiceType_Restore(context.Context, *RequestId) (*Response, error)
	StateDuty_Read(context.Context, *RequestId) (*Response, error)
	StateDuty_Create(context.Context, *RequestModel) (*Response, error)
	StateDuty_Update(context.Context, *RequestModel) (*Response, error)
	StateDuty_Save(context.Context, *RequestModel) (*Response, error)
	StateDuty_Delete(context.Context, *RequestId) (*Response, error)
	StateDuty_Restore(context.Context, *RequestId) (*Response, error)
	TableName_Read(context.Context, *RequestId) (*Response, error)
	TableName_Create(context.Context, *RequestModel) (*Response, error)
	TableName_Update(context.Context, *RequestModel) (*Response, error)
	TableName_Save(context.Context, *RequestModel) (*Response, error)
	TableName_Delete(context.Context, *RequestId) (*Response, error)
	TableName_Restore(context.Context, *RequestId) (*Response, error)
	UserRole_Read(context.Context, *RequestId) (*Response, error)
	UserRole_Create(context.Context, *RequestModel) (*Response, error)
	UserRole_Update(context.Context, *RequestModel) (*Response, error)
	UserRole_Save(context.Context, *RequestModel) (*Response, error)
	UserRole_Delete(context.Context, *RequestId) (*Response, error)
	UserRole_Restore(context.Context, *RequestId) (*Response, error)
	WhiteListReasonType_Read(context.Context, *RequestId) (*Response, error)
	WhiteListReasonType_Create(context.Context, *RequestModel) (*Response, error)
	WhiteListReasonType_Update(context.Context, *RequestModel) (*Response, error)
	WhiteListReasonType_Save(context.Context, *RequestModel) (*Response, error)
	WhiteListReasonType_Delete(context.Context, *RequestId) (*Response, error)
	WhiteListReasonType_Restore(context.Context, *RequestId) (*Response, error)
	Organization_Read(context.Context, *RequestId) (*Response, error)
	Organization_Create(context.Context, *RequestModel) (*Response, error)
	Organization_Update(context.Context, *RequestModel) (*Response, error)
	Organization_Save(context.Context, *RequestModel) (*Response, error)
	Organization_Delete(context.Context, *RequestId) (*Response, error)
	Organization_Restore(context.Context, *RequestId) (*Response, error)
	Organization_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error)
	Organization_FindByExtId(context.Context, *RequestExtId) (*Response, error)
	File_Read(context.Context, *RequestId) (*Response, error)
	File_Create(context.Context, *RequestModel) (*Response, error)
	File_Update(context.Context, *RequestModel) (*Response, error)
	File_Save(context.Context, *RequestModel) (*Response, error)
	File_Delete(context.Context, *RequestId) (*Response, error)
	File_Restore(context.Context, *RequestId) (*Response, error)
	File_FindByFileID(context.Context, *RequestString) (*Response, error)
	File_FindByFullName(context.Context, *RequestString) (*Response, error)
	OrganizationCasebook_Read(context.Context, *RequestId) (*Response, error)
	OrganizationCasebook_Create(context.Context, *RequestModel) (*Response, error)
	OrganizationCasebook_Update(context.Context, *RequestModel) (*Response, error)
	OrganizationCasebook_Save(context.Context, *RequestModel) (*Response, error)
	OrganizationCasebook_Delete(context.Context, *RequestId) (*Response, error)
	OrganizationCasebook_Restore(context.Context, *RequestId) (*Response, error)
	OrganizationCasebook_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error)
	OrganizationCasebook_FindByInn(context.Context, *RequestString) (*Response, error)
	OrganizationCasebook_FindByOrganizationId(context.Context, *RequestId) (*Response, error)
	Connection_Read(context.Context, *RequestId) (*Response, error)
	Connection_Create(context.Context, *RequestModel) (*Response, error)
	Connection_Update(context.Context, *RequestModel) (*Response, error)
	Connection_Save(context.Context, *RequestModel) (*Response, error)
	Employee_Read(context.Context, *RequestId) (*Response, error)
	Employee_Create(context.Context, *RequestModel) (*Response, error)
	Employee_Update(context.Context, *RequestModel) (*Response, error)
	Employee_Save(context.Context, *RequestModel) (*Response, error)
	Employee_Delete(context.Context, *RequestId) (*Response, error)
	Employee_Restore(context.Context, *RequestId) (*Response, error)
	Employee_FindByExtId(context.Context, *RequestExtId) (*Response, error)
	Employee_FindByLogin(context.Context, *RequestString) (*Response, error)
	Employee_FindByEMail(context.Context, *RequestString) (*Response, error)
	Employee_FindByFIO(context.Context, *RequestString3) (*Response, error)
	LawsuitStatusState_Read(context.Context, *RequestId) (*Response, error)
	LawsuitStatusState_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusState_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusState_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusState_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitStatusState_Restore(context.Context, *RequestId) (*Response, error)
	LawsuitStatusState_FillFromLawsuit(context.Context, *RequestIdId) (*ResponseEmpty, error)
	LawsuitStatusState_FindDebtSum(context.Context, *RequestIdId) (*ResponseFloat64, error)
	LawsuitStatusType_Read(context.Context, *RequestId) (*Response, error)
	LawsuitStatusType_Create(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusType_Update(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusType_Save(context.Context, *RequestModel) (*Response, error)
	LawsuitStatusType_Delete(context.Context, *RequestId) (*Response, error)
	LawsuitStatusType_Restore(context.Context, *RequestId) (*Response, error)
	Lawsuit_Read(context.Context, *RequestId) (*Response, error)
	Lawsuit_Create(context.Context, *RequestModel) (*Response, error)
	Lawsuit_Update(context.Context, *RequestModel) (*Response, error)
	Lawsuit_Save(context.Context, *RequestModel) (*Response, error)
	Lawsuit_Delete(context.Context, *RequestId) (*Response, error)
	Lawsuit_Restore(context.Context, *RequestId) (*Response, error)
	MessageAttachement_Read(context.Context, *RequestId) (*Response, error)
	MessageAttachement_Create(context.Context, *RequestModel) (*Response, error)
	MessageAttachement_Update(context.Context, *RequestModel) (*Response, error)
	MessageAttachement_Save(context.Context, *RequestModel) (*Response, error)
	MessageAttachement_Delete(context.Context, *RequestId) (*Response, error)
	MessageAttachement_Restore(context.Context, *RequestId) (*Response, error)
	MessageSendStatuse_Read(context.Context, *RequestId) (*Response, error)
	MessageSendStatuse_Create(context.Context, *RequestModel) (*Response, error)
	MessageSendStatuse_Update(context.Context, *RequestModel) (*Response, error)
	MessageSendStatuse_Save(context.Context, *RequestModel) (*Response, error)
	MessageSendStatuse_Delete(context.Context, *RequestId) (*Response, error)
	MessageSendStatuse_Restore(context.Context, *RequestId) (*Response, error)
	MessageType_Read(context.Context, *RequestId) (*Response, error)
	MessageType_Create(context.Context, *RequestModel) (*Response, error)
	MessageType_Update(context.Context, *RequestModel) (*Response, error)
	MessageType_Save(context.Context, *RequestModel) (*Response, error)
	MessageType_Delete(context.Context, *RequestId) (*Response, error)
	MessageType_Restore(context.Context, *RequestId) (*Response, error)
	Message_Read(context.Context, *RequestId) (*Response, error)
	Message_Create(context.Context, *RequestModel) (*Response, error)
	Message_Update(context.Context, *RequestModel) (*Response, error)
	Message_Save(context.Context, *RequestModel) (*Response, error)
	Message_Delete(context.Context, *RequestId) (*Response, error)
	Message_Restore(context.Context, *RequestId) (*Response, error)
	Message_FindBy_LawsuitID_MessageTypeID(context.Context, *RequestIdId) (*Response, error)
	mustEmbedUnimplementedSyncServiceServer()
}

// UnimplementedSyncServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSyncServiceServer struct {
}

func (UnimplementedSyncServiceServer) AccountingArea_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Read not implemented")
}
func (UnimplementedSyncServiceServer) AccountingArea_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Create not implemented")
}
func (UnimplementedSyncServiceServer) AccountingArea_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Update not implemented")
}
func (UnimplementedSyncServiceServer) AccountingArea_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Save not implemented")
}
func (UnimplementedSyncServiceServer) AccountingArea_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) AccountingArea_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Delete not implemented")
}
func (UnimplementedSyncServiceServer) AccountingArea_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccountingArea_Restore not implemented")
}
func (UnimplementedSyncServiceServer) AccrualType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Read not implemented")
}
func (UnimplementedSyncServiceServer) AccrualType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Create not implemented")
}
func (UnimplementedSyncServiceServer) AccrualType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Update not implemented")
}
func (UnimplementedSyncServiceServer) AccrualType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Save not implemented")
}
func (UnimplementedSyncServiceServer) AccrualType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) AccrualType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccrualType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Balance_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Read not implemented")
}
func (UnimplementedSyncServiceServer) Balance_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Create not implemented")
}
func (UnimplementedSyncServiceServer) Balance_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Update not implemented")
}
func (UnimplementedSyncServiceServer) Balance_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Save not implemented")
}
func (UnimplementedSyncServiceServer) Balance_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) Balance_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Balance_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance_Restore not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Read not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Create not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Update not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Save not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Delete not implemented")
}
func (UnimplementedSyncServiceServer) BankAccountOrganization_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BankAccountOrganization_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Bank_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Read not implemented")
}
func (UnimplementedSyncServiceServer) Bank_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Create not implemented")
}
func (UnimplementedSyncServiceServer) Bank_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Update not implemented")
}
func (UnimplementedSyncServiceServer) Bank_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Save not implemented")
}
func (UnimplementedSyncServiceServer) Bank_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) Bank_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Bank_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bank_Restore not implemented")
}
func (UnimplementedSyncServiceServer) BillKindType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Read not implemented")
}
func (UnimplementedSyncServiceServer) BillKindType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Create not implemented")
}
func (UnimplementedSyncServiceServer) BillKindType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Update not implemented")
}
func (UnimplementedSyncServiceServer) BillKindType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Save not implemented")
}
func (UnimplementedSyncServiceServer) BillKindType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) BillKindType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillKindType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Branch_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Read not implemented")
}
func (UnimplementedSyncServiceServer) Branch_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Create not implemented")
}
func (UnimplementedSyncServiceServer) Branch_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Update not implemented")
}
func (UnimplementedSyncServiceServer) Branch_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Save not implemented")
}
func (UnimplementedSyncServiceServer) Branch_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Branch_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Branch_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Calendar_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Read not implemented")
}
func (UnimplementedSyncServiceServer) Calendar_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Create not implemented")
}
func (UnimplementedSyncServiceServer) Calendar_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Update not implemented")
}
func (UnimplementedSyncServiceServer) Calendar_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Save not implemented")
}
func (UnimplementedSyncServiceServer) Calendar_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Calendar_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calendar_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ChangeItem_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Read not implemented")
}
func (UnimplementedSyncServiceServer) ChangeItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Create not implemented")
}
func (UnimplementedSyncServiceServer) ChangeItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Update not implemented")
}
func (UnimplementedSyncServiceServer) ChangeItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Save not implemented")
}
func (UnimplementedSyncServiceServer) ChangeItem_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ChangeItem_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeItem_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ChannelType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Read not implemented")
}
func (UnimplementedSyncServiceServer) ChannelType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Create not implemented")
}
func (UnimplementedSyncServiceServer) ChannelType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Update not implemented")
}
func (UnimplementedSyncServiceServer) ChannelType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Save not implemented")
}
func (UnimplementedSyncServiceServer) ChannelType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ChannelType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ClaimType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Read not implemented")
}
func (UnimplementedSyncServiceServer) ClaimType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Create not implemented")
}
func (UnimplementedSyncServiceServer) ClaimType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Update not implemented")
}
func (UnimplementedSyncServiceServer) ClaimType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Save not implemented")
}
func (UnimplementedSyncServiceServer) ClaimType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ClaimType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Comment_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment_Read not implemented")
}
func (UnimplementedSyncServiceServer) Comment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment_Create not implemented")
}
func (UnimplementedSyncServiceServer) Comment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment_Update not implemented")
}
func (UnimplementedSyncServiceServer) Comment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment_Save not implemented")
}
func (UnimplementedSyncServiceServer) Comment_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Comment_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Comment_Restore not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Read not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Create not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Update not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Save not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Delete not implemented")
}
func (UnimplementedSyncServiceServer) CompletedMonth_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletedMonth_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ContractBlackItem_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Read not implemented")
}
func (UnimplementedSyncServiceServer) ContractBlackItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Create not implemented")
}
func (UnimplementedSyncServiceServer) ContractBlackItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Update not implemented")
}
func (UnimplementedSyncServiceServer) ContractBlackItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Save not implemented")
}
func (UnimplementedSyncServiceServer) ContractBlackItem_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ContractBlackItem_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractBlackItem_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Read not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Create not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Update not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Save not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ContractCategoryType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractCategoryType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ContractWhiteItem_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Read not implemented")
}
func (UnimplementedSyncServiceServer) ContractWhiteItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Create not implemented")
}
func (UnimplementedSyncServiceServer) ContractWhiteItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Update not implemented")
}
func (UnimplementedSyncServiceServer) ContractWhiteItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Save not implemented")
}
func (UnimplementedSyncServiceServer) ContractWhiteItem_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ContractWhiteItem_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContractWhiteItem_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Contract_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Read not implemented")
}
func (UnimplementedSyncServiceServer) Contract_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Create not implemented")
}
func (UnimplementedSyncServiceServer) Contract_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Update not implemented")
}
func (UnimplementedSyncServiceServer) Contract_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Save not implemented")
}
func (UnimplementedSyncServiceServer) Contract_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) Contract_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Contract_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contract_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Court_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Read not implemented")
}
func (UnimplementedSyncServiceServer) Court_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Create not implemented")
}
func (UnimplementedSyncServiceServer) Court_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Update not implemented")
}
func (UnimplementedSyncServiceServer) Court_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Save not implemented")
}
func (UnimplementedSyncServiceServer) Court_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Court_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Court_Restore not implemented")
}
func (UnimplementedSyncServiceServer) DayType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Read not implemented")
}
func (UnimplementedSyncServiceServer) DayType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Create not implemented")
}
func (UnimplementedSyncServiceServer) DayType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Update not implemented")
}
func (UnimplementedSyncServiceServer) DayType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Save not implemented")
}
func (UnimplementedSyncServiceServer) DayType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) DayType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DayType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Read not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Create not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Update not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Save not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) DebtType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebtType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) DirectionType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Read not implemented")
}
func (UnimplementedSyncServiceServer) DirectionType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Create not implemented")
}
func (UnimplementedSyncServiceServer) DirectionType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Update not implemented")
}
func (UnimplementedSyncServiceServer) DirectionType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Save not implemented")
}
func (UnimplementedSyncServiceServer) DirectionType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) DirectionType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirectionType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLinkType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Read not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLinkType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Create not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLinkType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Update not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLinkType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Save not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLinkType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLinkType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLinkType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Read not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Create not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Update not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Save not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Delete not implemented")
}
func (UnimplementedSyncServiceServer) DocumentLink_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentLink_Restore not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Read not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Create not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Update not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Save not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) DocumentType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Document_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Read not implemented")
}
func (UnimplementedSyncServiceServer) Document_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Create not implemented")
}
func (UnimplementedSyncServiceServer) Document_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Update not implemented")
}
func (UnimplementedSyncServiceServer) Document_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Save not implemented")
}
func (UnimplementedSyncServiceServer) Document_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) Document_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Document_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Document_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Employee_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) EventType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Read not implemented")
}
func (UnimplementedSyncServiceServer) EventType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Create not implemented")
}
func (UnimplementedSyncServiceServer) EventType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Update not implemented")
}
func (UnimplementedSyncServiceServer) EventType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Save not implemented")
}
func (UnimplementedSyncServiceServer) EventType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) EventType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Event_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Read not implemented")
}
func (UnimplementedSyncServiceServer) Event_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Create not implemented")
}
func (UnimplementedSyncServiceServer) Event_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Update not implemented")
}
func (UnimplementedSyncServiceServer) Event_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Save not implemented")
}
func (UnimplementedSyncServiceServer) Event_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Event_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Event_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Facsimile_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Read not implemented")
}
func (UnimplementedSyncServiceServer) Facsimile_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Create not implemented")
}
func (UnimplementedSyncServiceServer) Facsimile_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Update not implemented")
}
func (UnimplementedSyncServiceServer) Facsimile_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Save not implemented")
}
func (UnimplementedSyncServiceServer) Facsimile_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Facsimile_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Facsimile_Restore not implemented")
}
func (UnimplementedSyncServiceServer) FileChange_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Read not implemented")
}
func (UnimplementedSyncServiceServer) FileChange_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Create not implemented")
}
func (UnimplementedSyncServiceServer) FileChange_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Update not implemented")
}
func (UnimplementedSyncServiceServer) FileChange_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileChange_Save not implemented")
}
func (UnimplementedSyncServiceServer) FileTemplate_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Read not implemented")
}
func (UnimplementedSyncServiceServer) FileTemplate_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Create not implemented")
}
func (UnimplementedSyncServiceServer) FileTemplate_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Update not implemented")
}
func (UnimplementedSyncServiceServer) FileTemplate_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Save not implemented")
}
func (UnimplementedSyncServiceServer) FileTemplate_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Delete not implemented")
}
func (UnimplementedSyncServiceServer) FileTemplate_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileTemplate_Restore not implemented")
}
func (UnimplementedSyncServiceServer) FileType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Read not implemented")
}
func (UnimplementedSyncServiceServer) FileType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Create not implemented")
}
func (UnimplementedSyncServiceServer) FileType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Update not implemented")
}
func (UnimplementedSyncServiceServer) FileType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Save not implemented")
}
func (UnimplementedSyncServiceServer) FileType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) FileType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FileType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) GenderType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Read not implemented")
}
func (UnimplementedSyncServiceServer) GenderType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Create not implemented")
}
func (UnimplementedSyncServiceServer) GenderType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Update not implemented")
}
func (UnimplementedSyncServiceServer) GenderType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Save not implemented")
}
func (UnimplementedSyncServiceServer) GenderType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) GenderType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenderType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) HashtagLink_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashtagLink_Read not implemented")
}
func (UnimplementedSyncServiceServer) HashtagLink_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashtagLink_Create not implemented")
}
func (UnimplementedSyncServiceServer) HashtagLink_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashtagLink_Update not implemented")
}
func (UnimplementedSyncServiceServer) HashtagLink_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashtagLink_Save not implemented")
}
func (UnimplementedSyncServiceServer) HashtagLink_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashtagLink_Delete not implemented")
}
func (UnimplementedSyncServiceServer) HashtagLink_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HashtagLink_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Hashtag_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Read not implemented")
}
func (UnimplementedSyncServiceServer) Hashtag_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Create not implemented")
}
func (UnimplementedSyncServiceServer) Hashtag_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Update not implemented")
}
func (UnimplementedSyncServiceServer) Hashtag_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Save not implemented")
}
func (UnimplementedSyncServiceServer) Hashtag_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Hashtag_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hashtag_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Individual_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Read not implemented")
}
func (UnimplementedSyncServiceServer) Individual_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Create not implemented")
}
func (UnimplementedSyncServiceServer) Individual_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Update not implemented")
}
func (UnimplementedSyncServiceServer) Individual_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Save not implemented")
}
func (UnimplementedSyncServiceServer) Individual_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) Individual_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Individual_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Individual_Restore not implemented")
}
func (UnimplementedSyncServiceServer) InvoiceDebtTypeStat_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Read not implemented")
}
func (UnimplementedSyncServiceServer) InvoiceDebtTypeStat_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Create not implemented")
}
func (UnimplementedSyncServiceServer) InvoiceDebtTypeStat_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Update not implemented")
}
func (UnimplementedSyncServiceServer) InvoiceDebtTypeStat_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Save not implemented")
}
func (UnimplementedSyncServiceServer) InvoiceDebtTypeStat_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Delete not implemented")
}
func (UnimplementedSyncServiceServer) InvoiceDebtTypeStat_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvoiceDebtTypeStat_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoiceCorrection_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoiceCorrection_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoiceCorrection_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoiceCorrection_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoiceCorrection_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoiceCorrection_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoiceCorrection_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoice_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoice_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoice_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoice_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoice_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitInvoice_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitInvoice_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPaymentCorrection_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPaymentCorrection_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPaymentCorrection_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPaymentCorrection_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPaymentCorrection_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPaymentCorrection_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPaymentCorrection_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPayment_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPayment_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPayment_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPayment_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPayment_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitPayment_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitPayment_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitReasonType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitReasonType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitReasonType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitReasonType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitReasonType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitReasonType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitReasonType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStageType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStageType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStageType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStageType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStageType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStageType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStageType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) LegalType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Read not implemented")
}
func (UnimplementedSyncServiceServer) LegalType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Create not implemented")
}
func (UnimplementedSyncServiceServer) LegalType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Update not implemented")
}
func (UnimplementedSyncServiceServer) LegalType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Save not implemented")
}
func (UnimplementedSyncServiceServer) LegalType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LegalType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LegalType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatus_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Read not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatus_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Create not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatus_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Update not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatus_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Save not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatus_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Delete not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatus_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatus_Restore not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Read not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Create not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Update not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Save not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCategoryType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCategoryType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationStateType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Read not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationStateType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Create not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationStateType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Update not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationStateType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Save not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationStateType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationStateType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationStateType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Organization_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Read not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Create not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Update not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Save not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Delete not implemented")
}
func (UnimplementedSyncServiceServer) PaymentDay_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentDay_Restore not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Read not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Create not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Update not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Save not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Delete not implemented")
}
func (UnimplementedSyncServiceServer) PaymentSchedule_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaymentSchedule_Restore not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Read not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Create not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Update not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Save not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Delete not implemented")
}
func (UnimplementedSyncServiceServer) PenaltyCalculationItem_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PenaltyCalculationItem_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Read not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Create not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Update not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Save not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ServiceProvider_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceProvider_Restore not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Read not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Create not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Update not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Save not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_FindByExtID(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_FindByExtID not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) ServiceType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) StateDuty_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Read not implemented")
}
func (UnimplementedSyncServiceServer) StateDuty_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Create not implemented")
}
func (UnimplementedSyncServiceServer) StateDuty_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Update not implemented")
}
func (UnimplementedSyncServiceServer) StateDuty_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Save not implemented")
}
func (UnimplementedSyncServiceServer) StateDuty_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Delete not implemented")
}
func (UnimplementedSyncServiceServer) StateDuty_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StateDuty_Restore not implemented")
}
func (UnimplementedSyncServiceServer) TableName_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Read not implemented")
}
func (UnimplementedSyncServiceServer) TableName_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Create not implemented")
}
func (UnimplementedSyncServiceServer) TableName_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Update not implemented")
}
func (UnimplementedSyncServiceServer) TableName_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Save not implemented")
}
func (UnimplementedSyncServiceServer) TableName_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Delete not implemented")
}
func (UnimplementedSyncServiceServer) TableName_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableName_Restore not implemented")
}
func (UnimplementedSyncServiceServer) UserRole_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Read not implemented")
}
func (UnimplementedSyncServiceServer) UserRole_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Create not implemented")
}
func (UnimplementedSyncServiceServer) UserRole_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Update not implemented")
}
func (UnimplementedSyncServiceServer) UserRole_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Save not implemented")
}
func (UnimplementedSyncServiceServer) UserRole_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Delete not implemented")
}
func (UnimplementedSyncServiceServer) UserRole_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRole_Restore not implemented")
}
func (UnimplementedSyncServiceServer) WhiteListReasonType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Read not implemented")
}
func (UnimplementedSyncServiceServer) WhiteListReasonType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Create not implemented")
}
func (UnimplementedSyncServiceServer) WhiteListReasonType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Update not implemented")
}
func (UnimplementedSyncServiceServer) WhiteListReasonType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Save not implemented")
}
func (UnimplementedSyncServiceServer) WhiteListReasonType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) WhiteListReasonType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhiteListReasonType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Organization_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Read not implemented")
}
func (UnimplementedSyncServiceServer) Organization_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Create not implemented")
}
func (UnimplementedSyncServiceServer) Organization_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Update not implemented")
}
func (UnimplementedSyncServiceServer) Organization_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Save not implemented")
}
func (UnimplementedSyncServiceServer) Organization_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Organization_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Organization_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindByInnKpp not implemented")
}
func (UnimplementedSyncServiceServer) Organization_FindByExtId(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Organization_FindByExtId not implemented")
}
func (UnimplementedSyncServiceServer) File_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Read not implemented")
}
func (UnimplementedSyncServiceServer) File_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Create not implemented")
}
func (UnimplementedSyncServiceServer) File_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Update not implemented")
}
func (UnimplementedSyncServiceServer) File_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Save not implemented")
}
func (UnimplementedSyncServiceServer) File_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Delete not implemented")
}
func (UnimplementedSyncServiceServer) File_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_Restore not implemented")
}
func (UnimplementedSyncServiceServer) File_FindByFileID(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_FindByFileID not implemented")
}
func (UnimplementedSyncServiceServer) File_FindByFullName(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method File_FindByFullName not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Read not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Create not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Update not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Save not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Delete not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_Restore not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_FindByInnKpp(context.Context, *RequestInnKpp) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_FindByInnKpp not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_FindByInn(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_FindByInn not implemented")
}
func (UnimplementedSyncServiceServer) OrganizationCasebook_FindByOrganizationId(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrganizationCasebook_FindByOrganizationId not implemented")
}
func (UnimplementedSyncServiceServer) Connection_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Read not implemented")
}
func (UnimplementedSyncServiceServer) Connection_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Create not implemented")
}
func (UnimplementedSyncServiceServer) Connection_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Update not implemented")
}
func (UnimplementedSyncServiceServer) Connection_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connection_Save not implemented")
}
func (UnimplementedSyncServiceServer) Employee_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Read not implemented")
}
func (UnimplementedSyncServiceServer) Employee_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Create not implemented")
}
func (UnimplementedSyncServiceServer) Employee_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Update not implemented")
}
func (UnimplementedSyncServiceServer) Employee_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Save not implemented")
}
func (UnimplementedSyncServiceServer) Employee_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Employee_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Employee_FindByExtId(context.Context, *RequestExtId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByExtId not implemented")
}
func (UnimplementedSyncServiceServer) Employee_FindByLogin(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByLogin not implemented")
}
func (UnimplementedSyncServiceServer) Employee_FindByEMail(context.Context, *RequestString) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByEMail not implemented")
}
func (UnimplementedSyncServiceServer) Employee_FindByFIO(context.Context, *RequestString3) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Employee_FindByFIO not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_Restore not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_FillFromLawsuit(context.Context, *RequestIdId) (*ResponseEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_FillFromLawsuit not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusState_FindDebtSum(context.Context, *RequestIdId) (*ResponseFloat64, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusState_FindDebtSum not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Read not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Create not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Update not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Save not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) LawsuitStatusType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LawsuitStatusType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Read not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Create not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Update not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Save not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Lawsuit_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lawsuit_Restore not implemented")
}
func (UnimplementedSyncServiceServer) MessageAttachement_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Read not implemented")
}
func (UnimplementedSyncServiceServer) MessageAttachement_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Create not implemented")
}
func (UnimplementedSyncServiceServer) MessageAttachement_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Update not implemented")
}
func (UnimplementedSyncServiceServer) MessageAttachement_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Save not implemented")
}
func (UnimplementedSyncServiceServer) MessageAttachement_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Delete not implemented")
}
func (UnimplementedSyncServiceServer) MessageAttachement_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageAttachement_Restore not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatuse_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatuse_Read not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatuse_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatuse_Create not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatuse_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatuse_Update not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatuse_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatuse_Save not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatuse_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatuse_Delete not implemented")
}
func (UnimplementedSyncServiceServer) MessageSendStatuse_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageSendStatuse_Restore not implemented")
}
func (UnimplementedSyncServiceServer) MessageType_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Read not implemented")
}
func (UnimplementedSyncServiceServer) MessageType_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Create not implemented")
}
func (UnimplementedSyncServiceServer) MessageType_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Update not implemented")
}
func (UnimplementedSyncServiceServer) MessageType_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Save not implemented")
}
func (UnimplementedSyncServiceServer) MessageType_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Delete not implemented")
}
func (UnimplementedSyncServiceServer) MessageType_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageType_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Message_Read(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Read not implemented")
}
func (UnimplementedSyncServiceServer) Message_Create(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Create not implemented")
}
func (UnimplementedSyncServiceServer) Message_Update(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Update not implemented")
}
func (UnimplementedSyncServiceServer) Message_Save(context.Context, *RequestModel) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Save not implemented")
}
func (UnimplementedSyncServiceServer) Message_Delete(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Delete not implemented")
}
func (UnimplementedSyncServiceServer) Message_Restore(context.Context, *RequestId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_Restore not implemented")
}
func (UnimplementedSyncServiceServer) Message_FindBy_LawsuitID_MessageTypeID(context.Context, *RequestIdId) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Message_FindBy_LawsuitID_MessageTypeID not implemented")
}
func (UnimplementedSyncServiceServer) mustEmbedUnimplementedSyncServiceServer() {}

// UnsafeSyncServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SyncServiceServer will
// result in compilation errors.
type UnsafeSyncServiceServer interface {
	mustEmbedUnimplementedSyncServiceServer()
}

func RegisterSyncServiceServer(s grpc.ServiceRegistrar, srv SyncServiceServer) {
	s.RegisterService(&SyncService_ServiceDesc, srv)
}

func _SyncService_AccountingArea_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccountingArea_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccountingArea_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccountingArea_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccountingArea_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccountingArea_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccountingArea_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccountingArea_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccountingArea_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccountingArea_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccrualType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccrualType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccrualType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccrualType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccrualType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccrualType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccrualType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccrualType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccrualType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccrualType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccrualType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccrualType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccrualType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccrualType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccrualType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccrualType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccrualType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccrualType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccrualType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccrualType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_AccrualType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).AccrualType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/AccrualType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).AccrualType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Balance_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Balance_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Balance_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Balance_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BankAccountOrganization_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BankAccountOrganization_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BankAccountOrganization_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BankAccountOrganization_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Bank_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Bank_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Bank_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Bank_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BillKindType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BillKindType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BillKindType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BillKindType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BillKindType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BillKindType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BillKindType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BillKindType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BillKindType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BillKindType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BillKindType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BillKindType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BillKindType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BillKindType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BillKindType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BillKindType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BillKindType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BillKindType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BillKindType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BillKindType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_BillKindType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).BillKindType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/BillKindType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).BillKindType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Branch_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Branch_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Branch_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Branch_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Branch_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Branch_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Branch_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Branch_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Branch_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Branch_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Branch_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Branch_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Branch_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Branch_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Branch_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Branch_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Branch_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Branch_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Branch_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Branch_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Branch_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Branch_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Branch_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Branch_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Calendar_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Calendar_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Calendar_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Calendar_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Calendar_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Calendar_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Calendar_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Calendar_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Calendar_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Calendar_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Calendar_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Calendar_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Calendar_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Calendar_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Calendar_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Calendar_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Calendar_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Calendar_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Calendar_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Calendar_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Calendar_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Calendar_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Calendar_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Calendar_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChangeItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChangeItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChangeItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChangeItem_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChangeItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChangeItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChangeItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChangeItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChangeItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChangeItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChangeItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChangeItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChangeItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChangeItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChangeItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChangeItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChangeItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChangeItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChangeItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChangeItem_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChangeItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChangeItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChangeItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChangeItem_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChannelType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChannelType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChannelType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChannelType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChannelType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChannelType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChannelType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChannelType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChannelType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChannelType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChannelType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChannelType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChannelType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChannelType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChannelType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChannelType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChannelType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChannelType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChannelType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChannelType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ChannelType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ChannelType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ChannelType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ChannelType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ClaimType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ClaimType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ClaimType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ClaimType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ClaimType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ClaimType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ClaimType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ClaimType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ClaimType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ClaimType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ClaimType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ClaimType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ClaimType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ClaimType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ClaimType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ClaimType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ClaimType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ClaimType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ClaimType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ClaimType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ClaimType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ClaimType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ClaimType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ClaimType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Comment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Comment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Comment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Comment_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Comment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Comment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Comment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Comment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Comment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Comment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Comment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Comment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Comment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Comment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Comment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Comment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Comment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Comment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Comment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Comment_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Comment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Comment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Comment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Comment_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_CompletedMonth_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).CompletedMonth_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/CompletedMonth_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).CompletedMonth_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractBlackItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractBlackItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractBlackItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractBlackItem_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractBlackItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractBlackItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractBlackItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractBlackItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractBlackItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractBlackItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractBlackItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractBlackItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractBlackItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractBlackItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractBlackItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractBlackItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractBlackItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractBlackItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractBlackItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractBlackItem_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractBlackItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractBlackItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractBlackItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractBlackItem_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractCategoryType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractCategoryType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractCategoryType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractCategoryType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractWhiteItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractWhiteItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractWhiteItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractWhiteItem_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractWhiteItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractWhiteItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractWhiteItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractWhiteItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractWhiteItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractWhiteItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractWhiteItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractWhiteItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractWhiteItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractWhiteItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractWhiteItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractWhiteItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractWhiteItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractWhiteItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractWhiteItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractWhiteItem_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ContractWhiteItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ContractWhiteItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ContractWhiteItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ContractWhiteItem_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Contract_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Contract_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Contract_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Contract_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Court_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Court_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Court_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Court_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Court_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Court_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Court_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Court_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Court_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Court_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Court_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Court_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Court_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Court_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Court_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Court_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Court_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Court_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Court_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Court_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Court_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Court_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Court_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Court_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DayType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DayType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DayType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DayType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DayType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DayType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DayType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DayType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DayType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DayType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DayType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DayType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DayType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DayType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DayType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DayType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DayType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DayType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DayType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DayType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DayType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DayType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DayType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DayType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DebtType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DebtType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DebtType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DebtType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DirectionType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DirectionType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DirectionType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DirectionType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DirectionType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DirectionType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DirectionType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DirectionType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DirectionType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DirectionType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DirectionType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DirectionType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DirectionType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DirectionType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DirectionType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DirectionType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DirectionType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DirectionType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DirectionType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DirectionType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DirectionType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DirectionType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DirectionType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DirectionType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLinkType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLinkType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLinkType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLinkType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLinkType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLinkType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLinkType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLinkType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLinkType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLinkType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLinkType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLinkType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLinkType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLinkType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLinkType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLinkType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLinkType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLinkType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLinkType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLinkType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLinkType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLinkType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLinkType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLinkType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentLink_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentLink_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentLink_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentLink_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_DocumentType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).DocumentType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/DocumentType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).DocumentType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Document_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Document_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Document_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Document_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_EventType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).EventType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/EventType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).EventType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_EventType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).EventType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/EventType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).EventType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_EventType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).EventType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/EventType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).EventType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_EventType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).EventType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/EventType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).EventType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_EventType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).EventType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/EventType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).EventType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_EventType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).EventType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/EventType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).EventType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Event_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Event_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Event_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Event_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Event_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Event_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Event_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Event_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Event_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Event_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Event_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Event_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Event_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Event_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Event_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Event_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Event_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Event_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Event_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Event_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Event_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Event_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Event_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Event_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Facsimile_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Facsimile_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Facsimile_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Facsimile_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Facsimile_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Facsimile_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Facsimile_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Facsimile_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Facsimile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Facsimile_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Facsimile_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Facsimile_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Facsimile_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Facsimile_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Facsimile_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Facsimile_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Facsimile_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Facsimile_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Facsimile_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Facsimile_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Facsimile_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Facsimile_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Facsimile_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Facsimile_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileChange_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileChange_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileChange_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileChange_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileChange_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileChange_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileChange_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileChange_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileChange_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileChange_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileChange_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileChange_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileChange_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileChange_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileChange_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileChange_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileTemplate_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileTemplate_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileTemplate_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileTemplate_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileTemplate_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileTemplate_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileTemplate_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileTemplate_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileTemplate_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileTemplate_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileTemplate_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileTemplate_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileTemplate_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileTemplate_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileTemplate_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileTemplate_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileTemplate_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileTemplate_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileTemplate_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileTemplate_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileTemplate_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileTemplate_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileTemplate_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileTemplate_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_FileType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).FileType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/FileType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).FileType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_GenderType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).GenderType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/GenderType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).GenderType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_GenderType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).GenderType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/GenderType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).GenderType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_GenderType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).GenderType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/GenderType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).GenderType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_GenderType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).GenderType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/GenderType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).GenderType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_GenderType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).GenderType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/GenderType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).GenderType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_GenderType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).GenderType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/GenderType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).GenderType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_HashtagLink_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).HashtagLink_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/HashtagLink_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).HashtagLink_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_HashtagLink_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).HashtagLink_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/HashtagLink_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).HashtagLink_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_HashtagLink_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).HashtagLink_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/HashtagLink_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).HashtagLink_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_HashtagLink_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).HashtagLink_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/HashtagLink_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).HashtagLink_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_HashtagLink_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).HashtagLink_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/HashtagLink_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).HashtagLink_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_HashtagLink_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).HashtagLink_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/HashtagLink_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).HashtagLink_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Hashtag_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Hashtag_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Hashtag_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Hashtag_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Hashtag_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Hashtag_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Hashtag_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Hashtag_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Hashtag_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Hashtag_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Hashtag_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Hashtag_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Hashtag_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Hashtag_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Hashtag_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Hashtag_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Hashtag_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Hashtag_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Hashtag_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Hashtag_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Hashtag_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Hashtag_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Hashtag_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Hashtag_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Individual_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Individual_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Individual_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Individual_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_InvoiceDebtTypeStat_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/InvoiceDebtTypeStat_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_InvoiceDebtTypeStat_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/InvoiceDebtTypeStat_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_InvoiceDebtTypeStat_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/InvoiceDebtTypeStat_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_InvoiceDebtTypeStat_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/InvoiceDebtTypeStat_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_InvoiceDebtTypeStat_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/InvoiceDebtTypeStat_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_InvoiceDebtTypeStat_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/InvoiceDebtTypeStat_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).InvoiceDebtTypeStat_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoiceCorrection_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoiceCorrection_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoiceCorrection_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoiceCorrection_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoiceCorrection_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoiceCorrection_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoiceCorrection_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoiceCorrection_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoiceCorrection_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoiceCorrection_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoiceCorrection_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoiceCorrection_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoiceCorrection_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoice_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoice_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoice_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoice_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoice_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoice_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoice_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoice_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoice_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoice_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoice_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoice_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoice_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoice_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoice_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoice_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoice_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoice_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoice_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoice_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitInvoice_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitInvoice_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitInvoice_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitInvoice_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPaymentCorrection_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPaymentCorrection_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPaymentCorrection_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPaymentCorrection_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPaymentCorrection_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPaymentCorrection_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPaymentCorrection_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPaymentCorrection_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPaymentCorrection_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPaymentCorrection_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPaymentCorrection_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPaymentCorrection_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPaymentCorrection_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPayment_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPayment_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPayment_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPayment_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPayment_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPayment_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPayment_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPayment_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPayment_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPayment_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPayment_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPayment_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPayment_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPayment_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPayment_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPayment_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPayment_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPayment_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPayment_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPayment_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitPayment_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitPayment_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitPayment_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitPayment_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitReasonType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitReasonType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitReasonType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitReasonType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitReasonType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitReasonType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitReasonType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitReasonType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitReasonType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitReasonType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitReasonType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitReasonType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitReasonType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitReasonType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitReasonType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitReasonType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitReasonType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitReasonType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitReasonType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitReasonType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitReasonType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitReasonType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitReasonType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitReasonType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStageType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStageType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStageType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStageType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStageType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStageType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStageType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStageType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStageType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStageType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStageType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStageType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStageType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStageType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStageType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStageType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStageType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStageType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStageType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStageType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStageType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStageType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStageType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStageType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LegalType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LegalType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LegalType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LegalType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LegalType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LegalType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LegalType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LegalType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LegalType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LegalType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LegalType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LegalType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LegalType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LegalType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LegalType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LegalType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LegalType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LegalType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LegalType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LegalType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LegalType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LegalType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LegalType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LegalType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatus_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatus_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatus_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatus_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatus_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatus_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatus_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatus_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatus_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatus_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatus_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatus_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatus_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatus_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatus_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatus_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatus_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatus_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatus_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatus_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatus_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatus_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatus_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatus_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCategoryType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCategoryType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCategoryType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCategoryType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationStateType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationStateType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationStateType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationStateType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationStateType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationStateType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationStateType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationStateType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationStateType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationStateType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationStateType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationStateType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationStateType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationStateType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationStateType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationStateType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationStateType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationStateType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationStateType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationStateType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationStateType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationStateType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationStateType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationStateType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentDay_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentDay_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentDay_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentDay_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PaymentSchedule_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PaymentSchedule_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PaymentSchedule_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PaymentSchedule_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_PenaltyCalculationItem_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/PenaltyCalculationItem_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).PenaltyCalculationItem_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceProvider_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceProvider_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceProvider_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceProvider_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_FindByExtID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_FindByExtID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_FindByExtID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_FindByExtID(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_ServiceType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).ServiceType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/ServiceType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).ServiceType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StateDuty_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StateDuty_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/StateDuty_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StateDuty_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StateDuty_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StateDuty_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/StateDuty_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StateDuty_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StateDuty_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StateDuty_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/StateDuty_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StateDuty_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StateDuty_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StateDuty_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/StateDuty_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StateDuty_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StateDuty_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StateDuty_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/StateDuty_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StateDuty_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_StateDuty_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).StateDuty_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/StateDuty_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).StateDuty_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_TableName_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).TableName_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/TableName_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).TableName_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_TableName_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).TableName_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/TableName_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).TableName_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_TableName_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).TableName_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/TableName_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).TableName_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_TableName_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).TableName_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/TableName_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).TableName_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_TableName_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).TableName_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/TableName_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).TableName_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_TableName_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).TableName_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/TableName_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).TableName_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UserRole_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UserRole_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/UserRole_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UserRole_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UserRole_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UserRole_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/UserRole_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UserRole_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UserRole_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UserRole_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/UserRole_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UserRole_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UserRole_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UserRole_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/UserRole_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UserRole_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UserRole_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UserRole_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/UserRole_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UserRole_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_UserRole_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).UserRole_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/UserRole_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).UserRole_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_WhiteListReasonType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).WhiteListReasonType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/WhiteListReasonType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).WhiteListReasonType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_WhiteListReasonType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).WhiteListReasonType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/WhiteListReasonType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).WhiteListReasonType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_WhiteListReasonType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).WhiteListReasonType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/WhiteListReasonType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).WhiteListReasonType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_WhiteListReasonType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).WhiteListReasonType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/WhiteListReasonType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).WhiteListReasonType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_WhiteListReasonType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).WhiteListReasonType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/WhiteListReasonType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).WhiteListReasonType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_WhiteListReasonType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).WhiteListReasonType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/WhiteListReasonType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).WhiteListReasonType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_FindByInnKpp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInnKpp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_FindByInnKpp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_FindByInnKpp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_FindByInnKpp(ctx, req.(*RequestInnKpp))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Organization_FindByExtId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Organization_FindByExtId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Organization_FindByExtId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Organization_FindByExtId(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_FindByFileID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_FindByFileID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_FindByFileID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_FindByFileID(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_File_FindByFullName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).File_FindByFullName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/File_FindByFullName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).File_FindByFullName(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_FindByInnKpp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInnKpp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_FindByInnKpp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_FindByInnKpp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_FindByInnKpp(ctx, req.(*RequestInnKpp))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_FindByInn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_FindByInn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_FindByInn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_FindByInn(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_OrganizationCasebook_FindByOrganizationId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).OrganizationCasebook_FindByOrganizationId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/OrganizationCasebook_FindByOrganizationId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).OrganizationCasebook_FindByOrganizationId(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Connection_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Connection_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Connection_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Connection_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Connection_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Connection_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Connection_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Connection_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Connection_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Connection_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Connection_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Connection_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Connection_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Connection_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Connection_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Connection_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_FindByExtId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestExtId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_FindByExtId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_FindByExtId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_FindByExtId(ctx, req.(*RequestExtId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_FindByLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_FindByLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_FindByLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_FindByLogin(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_FindByEMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_FindByEMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_FindByEMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_FindByEMail(ctx, req.(*RequestString))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Employee_FindByFIO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestString3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Employee_FindByFIO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Employee_FindByFIO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Employee_FindByFIO(ctx, req.(*RequestString3))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_FillFromLawsuit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestIdId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_FillFromLawsuit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_FillFromLawsuit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_FillFromLawsuit(ctx, req.(*RequestIdId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusState_FindDebtSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestIdId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusState_FindDebtSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusState_FindDebtSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusState_FindDebtSum(ctx, req.(*RequestIdId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_LawsuitStatusType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).LawsuitStatusType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/LawsuitStatusType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).LawsuitStatusType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Lawsuit_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Lawsuit_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Lawsuit_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Lawsuit_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageAttachement_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageAttachement_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageAttachement_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageAttachement_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageAttachement_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageAttachement_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageAttachement_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageAttachement_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageAttachement_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageAttachement_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageAttachement_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageAttachement_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageAttachement_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageAttachement_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageAttachement_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageAttachement_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageAttachement_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageAttachement_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageAttachement_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageAttachement_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageAttachement_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageAttachement_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageAttachement_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageAttachement_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatuse_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatuse_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatuse_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatuse_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatuse_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatuse_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatuse_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatuse_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatuse_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatuse_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatuse_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatuse_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatuse_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatuse_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatuse_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatuse_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatuse_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatuse_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatuse_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatuse_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageSendStatuse_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageSendStatuse_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageSendStatuse_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageSendStatuse_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageType_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageType_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageType_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageType_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageType_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageType_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageType_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageType_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageType_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageType_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageType_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageType_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageType_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageType_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageType_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageType_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageType_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageType_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageType_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageType_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_MessageType_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).MessageType_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/MessageType_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).MessageType_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_Read(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_Create(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_Update(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_Save(ctx, req.(*RequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_Delete(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_Restore(ctx, req.(*RequestId))
	}
	return interceptor(ctx, in, info, handler)
}

func _SyncService_Message_FindBy_LawsuitID_MessageTypeID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestIdId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SyncServiceServer).Message_FindBy_LawsuitID_MessageTypeID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Sync_service/Message_FindBy_LawsuitID_MessageTypeID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SyncServiceServer).Message_FindBy_LawsuitID_MessageTypeID(ctx, req.(*RequestIdId))
	}
	return interceptor(ctx, in, info, handler)
}

// SyncService_ServiceDesc is the grpc.ServiceDesc for SyncService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SyncService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Sync_service",
	HandlerType: (*SyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AccountingArea_Read",
			Handler:    _SyncService_AccountingArea_Read_Handler,
		},
		{
			MethodName: "AccountingArea_Create",
			Handler:    _SyncService_AccountingArea_Create_Handler,
		},
		{
			MethodName: "AccountingArea_Update",
			Handler:    _SyncService_AccountingArea_Update_Handler,
		},
		{
			MethodName: "AccountingArea_Save",
			Handler:    _SyncService_AccountingArea_Save_Handler,
		},
		{
			MethodName: "AccountingArea_FindByExtID",
			Handler:    _SyncService_AccountingArea_FindByExtID_Handler,
		},
		{
			MethodName: "AccountingArea_Delete",
			Handler:    _SyncService_AccountingArea_Delete_Handler,
		},
		{
			MethodName: "AccountingArea_Restore",
			Handler:    _SyncService_AccountingArea_Restore_Handler,
		},
		{
			MethodName: "AccrualType_Read",
			Handler:    _SyncService_AccrualType_Read_Handler,
		},
		{
			MethodName: "AccrualType_Create",
			Handler:    _SyncService_AccrualType_Create_Handler,
		},
		{
			MethodName: "AccrualType_Update",
			Handler:    _SyncService_AccrualType_Update_Handler,
		},
		{
			MethodName: "AccrualType_Save",
			Handler:    _SyncService_AccrualType_Save_Handler,
		},
		{
			MethodName: "AccrualType_Delete",
			Handler:    _SyncService_AccrualType_Delete_Handler,
		},
		{
			MethodName: "AccrualType_Restore",
			Handler:    _SyncService_AccrualType_Restore_Handler,
		},
		{
			MethodName: "Balance_Read",
			Handler:    _SyncService_Balance_Read_Handler,
		},
		{
			MethodName: "Balance_Create",
			Handler:    _SyncService_Balance_Create_Handler,
		},
		{
			MethodName: "Balance_Update",
			Handler:    _SyncService_Balance_Update_Handler,
		},
		{
			MethodName: "Balance_Save",
			Handler:    _SyncService_Balance_Save_Handler,
		},
		{
			MethodName: "Balance_FindByExtID",
			Handler:    _SyncService_Balance_FindByExtID_Handler,
		},
		{
			MethodName: "Balance_Delete",
			Handler:    _SyncService_Balance_Delete_Handler,
		},
		{
			MethodName: "Balance_Restore",
			Handler:    _SyncService_Balance_Restore_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Read",
			Handler:    _SyncService_BankAccountOrganization_Read_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Create",
			Handler:    _SyncService_BankAccountOrganization_Create_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Update",
			Handler:    _SyncService_BankAccountOrganization_Update_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Save",
			Handler:    _SyncService_BankAccountOrganization_Save_Handler,
		},
		{
			MethodName: "BankAccountOrganization_FindByExtID",
			Handler:    _SyncService_BankAccountOrganization_FindByExtID_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Delete",
			Handler:    _SyncService_BankAccountOrganization_Delete_Handler,
		},
		{
			MethodName: "BankAccountOrganization_Restore",
			Handler:    _SyncService_BankAccountOrganization_Restore_Handler,
		},
		{
			MethodName: "Bank_Read",
			Handler:    _SyncService_Bank_Read_Handler,
		},
		{
			MethodName: "Bank_Create",
			Handler:    _SyncService_Bank_Create_Handler,
		},
		{
			MethodName: "Bank_Update",
			Handler:    _SyncService_Bank_Update_Handler,
		},
		{
			MethodName: "Bank_Save",
			Handler:    _SyncService_Bank_Save_Handler,
		},
		{
			MethodName: "Bank_FindByExtID",
			Handler:    _SyncService_Bank_FindByExtID_Handler,
		},
		{
			MethodName: "Bank_Delete",
			Handler:    _SyncService_Bank_Delete_Handler,
		},
		{
			MethodName: "Bank_Restore",
			Handler:    _SyncService_Bank_Restore_Handler,
		},
		{
			MethodName: "BillKindType_Read",
			Handler:    _SyncService_BillKindType_Read_Handler,
		},
		{
			MethodName: "BillKindType_Create",
			Handler:    _SyncService_BillKindType_Create_Handler,
		},
		{
			MethodName: "BillKindType_Update",
			Handler:    _SyncService_BillKindType_Update_Handler,
		},
		{
			MethodName: "BillKindType_Save",
			Handler:    _SyncService_BillKindType_Save_Handler,
		},
		{
			MethodName: "BillKindType_Delete",
			Handler:    _SyncService_BillKindType_Delete_Handler,
		},
		{
			MethodName: "BillKindType_Restore",
			Handler:    _SyncService_BillKindType_Restore_Handler,
		},
		{
			MethodName: "Branch_Read",
			Handler:    _SyncService_Branch_Read_Handler,
		},
		{
			MethodName: "Branch_Create",
			Handler:    _SyncService_Branch_Create_Handler,
		},
		{
			MethodName: "Branch_Update",
			Handler:    _SyncService_Branch_Update_Handler,
		},
		{
			MethodName: "Branch_Save",
			Handler:    _SyncService_Branch_Save_Handler,
		},
		{
			MethodName: "Branch_Delete",
			Handler:    _SyncService_Branch_Delete_Handler,
		},
		{
			MethodName: "Branch_Restore",
			Handler:    _SyncService_Branch_Restore_Handler,
		},
		{
			MethodName: "Calendar_Read",
			Handler:    _SyncService_Calendar_Read_Handler,
		},
		{
			MethodName: "Calendar_Create",
			Handler:    _SyncService_Calendar_Create_Handler,
		},
		{
			MethodName: "Calendar_Update",
			Handler:    _SyncService_Calendar_Update_Handler,
		},
		{
			MethodName: "Calendar_Save",
			Handler:    _SyncService_Calendar_Save_Handler,
		},
		{
			MethodName: "Calendar_Delete",
			Handler:    _SyncService_Calendar_Delete_Handler,
		},
		{
			MethodName: "Calendar_Restore",
			Handler:    _SyncService_Calendar_Restore_Handler,
		},
		{
			MethodName: "ChangeItem_Read",
			Handler:    _SyncService_ChangeItem_Read_Handler,
		},
		{
			MethodName: "ChangeItem_Create",
			Handler:    _SyncService_ChangeItem_Create_Handler,
		},
		{
			MethodName: "ChangeItem_Update",
			Handler:    _SyncService_ChangeItem_Update_Handler,
		},
		{
			MethodName: "ChangeItem_Save",
			Handler:    _SyncService_ChangeItem_Save_Handler,
		},
		{
			MethodName: "ChangeItem_Delete",
			Handler:    _SyncService_ChangeItem_Delete_Handler,
		},
		{
			MethodName: "ChangeItem_Restore",
			Handler:    _SyncService_ChangeItem_Restore_Handler,
		},
		{
			MethodName: "ChannelType_Read",
			Handler:    _SyncService_ChannelType_Read_Handler,
		},
		{
			MethodName: "ChannelType_Create",
			Handler:    _SyncService_ChannelType_Create_Handler,
		},
		{
			MethodName: "ChannelType_Update",
			Handler:    _SyncService_ChannelType_Update_Handler,
		},
		{
			MethodName: "ChannelType_Save",
			Handler:    _SyncService_ChannelType_Save_Handler,
		},
		{
			MethodName: "ChannelType_Delete",
			Handler:    _SyncService_ChannelType_Delete_Handler,
		},
		{
			MethodName: "ChannelType_Restore",
			Handler:    _SyncService_ChannelType_Restore_Handler,
		},
		{
			MethodName: "ClaimType_Read",
			Handler:    _SyncService_ClaimType_Read_Handler,
		},
		{
			MethodName: "ClaimType_Create",
			Handler:    _SyncService_ClaimType_Create_Handler,
		},
		{
			MethodName: "ClaimType_Update",
			Handler:    _SyncService_ClaimType_Update_Handler,
		},
		{
			MethodName: "ClaimType_Save",
			Handler:    _SyncService_ClaimType_Save_Handler,
		},
		{
			MethodName: "ClaimType_Delete",
			Handler:    _SyncService_ClaimType_Delete_Handler,
		},
		{
			MethodName: "ClaimType_Restore",
			Handler:    _SyncService_ClaimType_Restore_Handler,
		},
		{
			MethodName: "Comment_Read",
			Handler:    _SyncService_Comment_Read_Handler,
		},
		{
			MethodName: "Comment_Create",
			Handler:    _SyncService_Comment_Create_Handler,
		},
		{
			MethodName: "Comment_Update",
			Handler:    _SyncService_Comment_Update_Handler,
		},
		{
			MethodName: "Comment_Save",
			Handler:    _SyncService_Comment_Save_Handler,
		},
		{
			MethodName: "Comment_Delete",
			Handler:    _SyncService_Comment_Delete_Handler,
		},
		{
			MethodName: "Comment_Restore",
			Handler:    _SyncService_Comment_Restore_Handler,
		},
		{
			MethodName: "CompletedMonth_Read",
			Handler:    _SyncService_CompletedMonth_Read_Handler,
		},
		{
			MethodName: "CompletedMonth_Create",
			Handler:    _SyncService_CompletedMonth_Create_Handler,
		},
		{
			MethodName: "CompletedMonth_Update",
			Handler:    _SyncService_CompletedMonth_Update_Handler,
		},
		{
			MethodName: "CompletedMonth_Save",
			Handler:    _SyncService_CompletedMonth_Save_Handler,
		},
		{
			MethodName: "CompletedMonth_FindByExtID",
			Handler:    _SyncService_CompletedMonth_FindByExtID_Handler,
		},
		{
			MethodName: "CompletedMonth_Delete",
			Handler:    _SyncService_CompletedMonth_Delete_Handler,
		},
		{
			MethodName: "CompletedMonth_Restore",
			Handler:    _SyncService_CompletedMonth_Restore_Handler,
		},
		{
			MethodName: "ContractBlackItem_Read",
			Handler:    _SyncService_ContractBlackItem_Read_Handler,
		},
		{
			MethodName: "ContractBlackItem_Create",
			Handler:    _SyncService_ContractBlackItem_Create_Handler,
		},
		{
			MethodName: "ContractBlackItem_Update",
			Handler:    _SyncService_ContractBlackItem_Update_Handler,
		},
		{
			MethodName: "ContractBlackItem_Save",
			Handler:    _SyncService_ContractBlackItem_Save_Handler,
		},
		{
			MethodName: "ContractBlackItem_Delete",
			Handler:    _SyncService_ContractBlackItem_Delete_Handler,
		},
		{
			MethodName: "ContractBlackItem_Restore",
			Handler:    _SyncService_ContractBlackItem_Restore_Handler,
		},
		{
			MethodName: "ContractCategoryType_Read",
			Handler:    _SyncService_ContractCategoryType_Read_Handler,
		},
		{
			MethodName: "ContractCategoryType_Create",
			Handler:    _SyncService_ContractCategoryType_Create_Handler,
		},
		{
			MethodName: "ContractCategoryType_Update",
			Handler:    _SyncService_ContractCategoryType_Update_Handler,
		},
		{
			MethodName: "ContractCategoryType_Save",
			Handler:    _SyncService_ContractCategoryType_Save_Handler,
		},
		{
			MethodName: "ContractCategoryType_FindByExtID",
			Handler:    _SyncService_ContractCategoryType_FindByExtID_Handler,
		},
		{
			MethodName: "ContractCategoryType_Delete",
			Handler:    _SyncService_ContractCategoryType_Delete_Handler,
		},
		{
			MethodName: "ContractCategoryType_Restore",
			Handler:    _SyncService_ContractCategoryType_Restore_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Read",
			Handler:    _SyncService_ContractWhiteItem_Read_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Create",
			Handler:    _SyncService_ContractWhiteItem_Create_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Update",
			Handler:    _SyncService_ContractWhiteItem_Update_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Save",
			Handler:    _SyncService_ContractWhiteItem_Save_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Delete",
			Handler:    _SyncService_ContractWhiteItem_Delete_Handler,
		},
		{
			MethodName: "ContractWhiteItem_Restore",
			Handler:    _SyncService_ContractWhiteItem_Restore_Handler,
		},
		{
			MethodName: "Contract_Read",
			Handler:    _SyncService_Contract_Read_Handler,
		},
		{
			MethodName: "Contract_Create",
			Handler:    _SyncService_Contract_Create_Handler,
		},
		{
			MethodName: "Contract_Update",
			Handler:    _SyncService_Contract_Update_Handler,
		},
		{
			MethodName: "Contract_Save",
			Handler:    _SyncService_Contract_Save_Handler,
		},
		{
			MethodName: "Contract_FindByExtID",
			Handler:    _SyncService_Contract_FindByExtID_Handler,
		},
		{
			MethodName: "Contract_Delete",
			Handler:    _SyncService_Contract_Delete_Handler,
		},
		{
			MethodName: "Contract_Restore",
			Handler:    _SyncService_Contract_Restore_Handler,
		},
		{
			MethodName: "Court_Read",
			Handler:    _SyncService_Court_Read_Handler,
		},
		{
			MethodName: "Court_Create",
			Handler:    _SyncService_Court_Create_Handler,
		},
		{
			MethodName: "Court_Update",
			Handler:    _SyncService_Court_Update_Handler,
		},
		{
			MethodName: "Court_Save",
			Handler:    _SyncService_Court_Save_Handler,
		},
		{
			MethodName: "Court_Delete",
			Handler:    _SyncService_Court_Delete_Handler,
		},
		{
			MethodName: "Court_Restore",
			Handler:    _SyncService_Court_Restore_Handler,
		},
		{
			MethodName: "DayType_Read",
			Handler:    _SyncService_DayType_Read_Handler,
		},
		{
			MethodName: "DayType_Create",
			Handler:    _SyncService_DayType_Create_Handler,
		},
		{
			MethodName: "DayType_Update",
			Handler:    _SyncService_DayType_Update_Handler,
		},
		{
			MethodName: "DayType_Save",
			Handler:    _SyncService_DayType_Save_Handler,
		},
		{
			MethodName: "DayType_Delete",
			Handler:    _SyncService_DayType_Delete_Handler,
		},
		{
			MethodName: "DayType_Restore",
			Handler:    _SyncService_DayType_Restore_Handler,
		},
		{
			MethodName: "DebtType_Read",
			Handler:    _SyncService_DebtType_Read_Handler,
		},
		{
			MethodName: "DebtType_Create",
			Handler:    _SyncService_DebtType_Create_Handler,
		},
		{
			MethodName: "DebtType_Update",
			Handler:    _SyncService_DebtType_Update_Handler,
		},
		{
			MethodName: "DebtType_Save",
			Handler:    _SyncService_DebtType_Save_Handler,
		},
		{
			MethodName: "DebtType_FindByExtID",
			Handler:    _SyncService_DebtType_FindByExtID_Handler,
		},
		{
			MethodName: "DebtType_Delete",
			Handler:    _SyncService_DebtType_Delete_Handler,
		},
		{
			MethodName: "DebtType_Restore",
			Handler:    _SyncService_DebtType_Restore_Handler,
		},
		{
			MethodName: "DirectionType_Read",
			Handler:    _SyncService_DirectionType_Read_Handler,
		},
		{
			MethodName: "DirectionType_Create",
			Handler:    _SyncService_DirectionType_Create_Handler,
		},
		{
			MethodName: "DirectionType_Update",
			Handler:    _SyncService_DirectionType_Update_Handler,
		},
		{
			MethodName: "DirectionType_Save",
			Handler:    _SyncService_DirectionType_Save_Handler,
		},
		{
			MethodName: "DirectionType_Delete",
			Handler:    _SyncService_DirectionType_Delete_Handler,
		},
		{
			MethodName: "DirectionType_Restore",
			Handler:    _SyncService_DirectionType_Restore_Handler,
		},
		{
			MethodName: "DocumentLinkType_Read",
			Handler:    _SyncService_DocumentLinkType_Read_Handler,
		},
		{
			MethodName: "DocumentLinkType_Create",
			Handler:    _SyncService_DocumentLinkType_Create_Handler,
		},
		{
			MethodName: "DocumentLinkType_Update",
			Handler:    _SyncService_DocumentLinkType_Update_Handler,
		},
		{
			MethodName: "DocumentLinkType_Save",
			Handler:    _SyncService_DocumentLinkType_Save_Handler,
		},
		{
			MethodName: "DocumentLinkType_Delete",
			Handler:    _SyncService_DocumentLinkType_Delete_Handler,
		},
		{
			MethodName: "DocumentLinkType_Restore",
			Handler:    _SyncService_DocumentLinkType_Restore_Handler,
		},
		{
			MethodName: "DocumentLink_Read",
			Handler:    _SyncService_DocumentLink_Read_Handler,
		},
		{
			MethodName: "DocumentLink_Create",
			Handler:    _SyncService_DocumentLink_Create_Handler,
		},
		{
			MethodName: "DocumentLink_Update",
			Handler:    _SyncService_DocumentLink_Update_Handler,
		},
		{
			MethodName: "DocumentLink_Save",
			Handler:    _SyncService_DocumentLink_Save_Handler,
		},
		{
			MethodName: "DocumentLink_FindByExtID",
			Handler:    _SyncService_DocumentLink_FindByExtID_Handler,
		},
		{
			MethodName: "DocumentLink_Delete",
			Handler:    _SyncService_DocumentLink_Delete_Handler,
		},
		{
			MethodName: "DocumentLink_Restore",
			Handler:    _SyncService_DocumentLink_Restore_Handler,
		},
		{
			MethodName: "DocumentType_Read",
			Handler:    _SyncService_DocumentType_Read_Handler,
		},
		{
			MethodName: "DocumentType_Create",
			Handler:    _SyncService_DocumentType_Create_Handler,
		},
		{
			MethodName: "DocumentType_Update",
			Handler:    _SyncService_DocumentType_Update_Handler,
		},
		{
			MethodName: "DocumentType_Save",
			Handler:    _SyncService_DocumentType_Save_Handler,
		},
		{
			MethodName: "DocumentType_FindByExtID",
			Handler:    _SyncService_DocumentType_FindByExtID_Handler,
		},
		{
			MethodName: "DocumentType_Delete",
			Handler:    _SyncService_DocumentType_Delete_Handler,
		},
		{
			MethodName: "DocumentType_Restore",
			Handler:    _SyncService_DocumentType_Restore_Handler,
		},
		{
			MethodName: "Document_Read",
			Handler:    _SyncService_Document_Read_Handler,
		},
		{
			MethodName: "Document_Create",
			Handler:    _SyncService_Document_Create_Handler,
		},
		{
			MethodName: "Document_Update",
			Handler:    _SyncService_Document_Update_Handler,
		},
		{
			MethodName: "Document_Save",
			Handler:    _SyncService_Document_Save_Handler,
		},
		{
			MethodName: "Document_FindByExtID",
			Handler:    _SyncService_Document_FindByExtID_Handler,
		},
		{
			MethodName: "Document_Delete",
			Handler:    _SyncService_Document_Delete_Handler,
		},
		{
			MethodName: "Document_Restore",
			Handler:    _SyncService_Document_Restore_Handler,
		},
		{
			MethodName: "Employee_FindByExtID",
			Handler:    _SyncService_Employee_FindByExtID_Handler,
		},
		{
			MethodName: "EventType_Read",
			Handler:    _SyncService_EventType_Read_Handler,
		},
		{
			MethodName: "EventType_Create",
			Handler:    _SyncService_EventType_Create_Handler,
		},
		{
			MethodName: "EventType_Update",
			Handler:    _SyncService_EventType_Update_Handler,
		},
		{
			MethodName: "EventType_Save",
			Handler:    _SyncService_EventType_Save_Handler,
		},
		{
			MethodName: "EventType_Delete",
			Handler:    _SyncService_EventType_Delete_Handler,
		},
		{
			MethodName: "EventType_Restore",
			Handler:    _SyncService_EventType_Restore_Handler,
		},
		{
			MethodName: "Event_Read",
			Handler:    _SyncService_Event_Read_Handler,
		},
		{
			MethodName: "Event_Create",
			Handler:    _SyncService_Event_Create_Handler,
		},
		{
			MethodName: "Event_Update",
			Handler:    _SyncService_Event_Update_Handler,
		},
		{
			MethodName: "Event_Save",
			Handler:    _SyncService_Event_Save_Handler,
		},
		{
			MethodName: "Event_Delete",
			Handler:    _SyncService_Event_Delete_Handler,
		},
		{
			MethodName: "Event_Restore",
			Handler:    _SyncService_Event_Restore_Handler,
		},
		{
			MethodName: "Facsimile_Read",
			Handler:    _SyncService_Facsimile_Read_Handler,
		},
		{
			MethodName: "Facsimile_Create",
			Handler:    _SyncService_Facsimile_Create_Handler,
		},
		{
			MethodName: "Facsimile_Update",
			Handler:    _SyncService_Facsimile_Update_Handler,
		},
		{
			MethodName: "Facsimile_Save",
			Handler:    _SyncService_Facsimile_Save_Handler,
		},
		{
			MethodName: "Facsimile_Delete",
			Handler:    _SyncService_Facsimile_Delete_Handler,
		},
		{
			MethodName: "Facsimile_Restore",
			Handler:    _SyncService_Facsimile_Restore_Handler,
		},
		{
			MethodName: "FileChange_Read",
			Handler:    _SyncService_FileChange_Read_Handler,
		},
		{
			MethodName: "FileChange_Create",
			Handler:    _SyncService_FileChange_Create_Handler,
		},
		{
			MethodName: "FileChange_Update",
			Handler:    _SyncService_FileChange_Update_Handler,
		},
		{
			MethodName: "FileChange_Save",
			Handler:    _SyncService_FileChange_Save_Handler,
		},
		{
			MethodName: "FileTemplate_Read",
			Handler:    _SyncService_FileTemplate_Read_Handler,
		},
		{
			MethodName: "FileTemplate_Create",
			Handler:    _SyncService_FileTemplate_Create_Handler,
		},
		{
			MethodName: "FileTemplate_Update",
			Handler:    _SyncService_FileTemplate_Update_Handler,
		},
		{
			MethodName: "FileTemplate_Save",
			Handler:    _SyncService_FileTemplate_Save_Handler,
		},
		{
			MethodName: "FileTemplate_Delete",
			Handler:    _SyncService_FileTemplate_Delete_Handler,
		},
		{
			MethodName: "FileTemplate_Restore",
			Handler:    _SyncService_FileTemplate_Restore_Handler,
		},
		{
			MethodName: "FileType_Read",
			Handler:    _SyncService_FileType_Read_Handler,
		},
		{
			MethodName: "FileType_Create",
			Handler:    _SyncService_FileType_Create_Handler,
		},
		{
			MethodName: "FileType_Update",
			Handler:    _SyncService_FileType_Update_Handler,
		},
		{
			MethodName: "FileType_Save",
			Handler:    _SyncService_FileType_Save_Handler,
		},
		{
			MethodName: "FileType_Delete",
			Handler:    _SyncService_FileType_Delete_Handler,
		},
		{
			MethodName: "FileType_Restore",
			Handler:    _SyncService_FileType_Restore_Handler,
		},
		{
			MethodName: "GenderType_Read",
			Handler:    _SyncService_GenderType_Read_Handler,
		},
		{
			MethodName: "GenderType_Create",
			Handler:    _SyncService_GenderType_Create_Handler,
		},
		{
			MethodName: "GenderType_Update",
			Handler:    _SyncService_GenderType_Update_Handler,
		},
		{
			MethodName: "GenderType_Save",
			Handler:    _SyncService_GenderType_Save_Handler,
		},
		{
			MethodName: "GenderType_Delete",
			Handler:    _SyncService_GenderType_Delete_Handler,
		},
		{
			MethodName: "GenderType_Restore",
			Handler:    _SyncService_GenderType_Restore_Handler,
		},
		{
			MethodName: "HashtagLink_Read",
			Handler:    _SyncService_HashtagLink_Read_Handler,
		},
		{
			MethodName: "HashtagLink_Create",
			Handler:    _SyncService_HashtagLink_Create_Handler,
		},
		{
			MethodName: "HashtagLink_Update",
			Handler:    _SyncService_HashtagLink_Update_Handler,
		},
		{
			MethodName: "HashtagLink_Save",
			Handler:    _SyncService_HashtagLink_Save_Handler,
		},
		{
			MethodName: "HashtagLink_Delete",
			Handler:    _SyncService_HashtagLink_Delete_Handler,
		},
		{
			MethodName: "HashtagLink_Restore",
			Handler:    _SyncService_HashtagLink_Restore_Handler,
		},
		{
			MethodName: "Hashtag_Read",
			Handler:    _SyncService_Hashtag_Read_Handler,
		},
		{
			MethodName: "Hashtag_Create",
			Handler:    _SyncService_Hashtag_Create_Handler,
		},
		{
			MethodName: "Hashtag_Update",
			Handler:    _SyncService_Hashtag_Update_Handler,
		},
		{
			MethodName: "Hashtag_Save",
			Handler:    _SyncService_Hashtag_Save_Handler,
		},
		{
			MethodName: "Hashtag_Delete",
			Handler:    _SyncService_Hashtag_Delete_Handler,
		},
		{
			MethodName: "Hashtag_Restore",
			Handler:    _SyncService_Hashtag_Restore_Handler,
		},
		{
			MethodName: "Individual_Read",
			Handler:    _SyncService_Individual_Read_Handler,
		},
		{
			MethodName: "Individual_Create",
			Handler:    _SyncService_Individual_Create_Handler,
		},
		{
			MethodName: "Individual_Update",
			Handler:    _SyncService_Individual_Update_Handler,
		},
		{
			MethodName: "Individual_Save",
			Handler:    _SyncService_Individual_Save_Handler,
		},
		{
			MethodName: "Individual_FindByExtID",
			Handler:    _SyncService_Individual_FindByExtID_Handler,
		},
		{
			MethodName: "Individual_Delete",
			Handler:    _SyncService_Individual_Delete_Handler,
		},
		{
			MethodName: "Individual_Restore",
			Handler:    _SyncService_Individual_Restore_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Read",
			Handler:    _SyncService_InvoiceDebtTypeStat_Read_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Create",
			Handler:    _SyncService_InvoiceDebtTypeStat_Create_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Update",
			Handler:    _SyncService_InvoiceDebtTypeStat_Update_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Save",
			Handler:    _SyncService_InvoiceDebtTypeStat_Save_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Delete",
			Handler:    _SyncService_InvoiceDebtTypeStat_Delete_Handler,
		},
		{
			MethodName: "InvoiceDebtTypeStat_Restore",
			Handler:    _SyncService_InvoiceDebtTypeStat_Restore_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Read",
			Handler:    _SyncService_LawsuitInvoiceCorrection_Read_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Create",
			Handler:    _SyncService_LawsuitInvoiceCorrection_Create_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Update",
			Handler:    _SyncService_LawsuitInvoiceCorrection_Update_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Save",
			Handler:    _SyncService_LawsuitInvoiceCorrection_Save_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Delete",
			Handler:    _SyncService_LawsuitInvoiceCorrection_Delete_Handler,
		},
		{
			MethodName: "LawsuitInvoiceCorrection_Restore",
			Handler:    _SyncService_LawsuitInvoiceCorrection_Restore_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Read",
			Handler:    _SyncService_LawsuitInvoice_Read_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Create",
			Handler:    _SyncService_LawsuitInvoice_Create_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Update",
			Handler:    _SyncService_LawsuitInvoice_Update_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Save",
			Handler:    _SyncService_LawsuitInvoice_Save_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Delete",
			Handler:    _SyncService_LawsuitInvoice_Delete_Handler,
		},
		{
			MethodName: "LawsuitInvoice_Restore",
			Handler:    _SyncService_LawsuitInvoice_Restore_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Read",
			Handler:    _SyncService_LawsuitPaymentCorrection_Read_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Create",
			Handler:    _SyncService_LawsuitPaymentCorrection_Create_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Update",
			Handler:    _SyncService_LawsuitPaymentCorrection_Update_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Save",
			Handler:    _SyncService_LawsuitPaymentCorrection_Save_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Delete",
			Handler:    _SyncService_LawsuitPaymentCorrection_Delete_Handler,
		},
		{
			MethodName: "LawsuitPaymentCorrection_Restore",
			Handler:    _SyncService_LawsuitPaymentCorrection_Restore_Handler,
		},
		{
			MethodName: "LawsuitPayment_Read",
			Handler:    _SyncService_LawsuitPayment_Read_Handler,
		},
		{
			MethodName: "LawsuitPayment_Create",
			Handler:    _SyncService_LawsuitPayment_Create_Handler,
		},
		{
			MethodName: "LawsuitPayment_Update",
			Handler:    _SyncService_LawsuitPayment_Update_Handler,
		},
		{
			MethodName: "LawsuitPayment_Save",
			Handler:    _SyncService_LawsuitPayment_Save_Handler,
		},
		{
			MethodName: "LawsuitPayment_Delete",
			Handler:    _SyncService_LawsuitPayment_Delete_Handler,
		},
		{
			MethodName: "LawsuitPayment_Restore",
			Handler:    _SyncService_LawsuitPayment_Restore_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Read",
			Handler:    _SyncService_LawsuitReasonType_Read_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Create",
			Handler:    _SyncService_LawsuitReasonType_Create_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Update",
			Handler:    _SyncService_LawsuitReasonType_Update_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Save",
			Handler:    _SyncService_LawsuitReasonType_Save_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Delete",
			Handler:    _SyncService_LawsuitReasonType_Delete_Handler,
		},
		{
			MethodName: "LawsuitReasonType_Restore",
			Handler:    _SyncService_LawsuitReasonType_Restore_Handler,
		},
		{
			MethodName: "LawsuitStageType_Read",
			Handler:    _SyncService_LawsuitStageType_Read_Handler,
		},
		{
			MethodName: "LawsuitStageType_Create",
			Handler:    _SyncService_LawsuitStageType_Create_Handler,
		},
		{
			MethodName: "LawsuitStageType_Update",
			Handler:    _SyncService_LawsuitStageType_Update_Handler,
		},
		{
			MethodName: "LawsuitStageType_Save",
			Handler:    _SyncService_LawsuitStageType_Save_Handler,
		},
		{
			MethodName: "LawsuitStageType_Delete",
			Handler:    _SyncService_LawsuitStageType_Delete_Handler,
		},
		{
			MethodName: "LawsuitStageType_Restore",
			Handler:    _SyncService_LawsuitStageType_Restore_Handler,
		},
		{
			MethodName: "LawsuitType_Read",
			Handler:    _SyncService_LawsuitType_Read_Handler,
		},
		{
			MethodName: "LawsuitType_Create",
			Handler:    _SyncService_LawsuitType_Create_Handler,
		},
		{
			MethodName: "LawsuitType_Update",
			Handler:    _SyncService_LawsuitType_Update_Handler,
		},
		{
			MethodName: "LawsuitType_Save",
			Handler:    _SyncService_LawsuitType_Save_Handler,
		},
		{
			MethodName: "LawsuitType_Delete",
			Handler:    _SyncService_LawsuitType_Delete_Handler,
		},
		{
			MethodName: "LawsuitType_Restore",
			Handler:    _SyncService_LawsuitType_Restore_Handler,
		},
		{
			MethodName: "Lawsuit_FindByExtID",
			Handler:    _SyncService_Lawsuit_FindByExtID_Handler,
		},
		{
			MethodName: "LegalType_Read",
			Handler:    _SyncService_LegalType_Read_Handler,
		},
		{
			MethodName: "LegalType_Create",
			Handler:    _SyncService_LegalType_Create_Handler,
		},
		{
			MethodName: "LegalType_Update",
			Handler:    _SyncService_LegalType_Update_Handler,
		},
		{
			MethodName: "LegalType_Save",
			Handler:    _SyncService_LegalType_Save_Handler,
		},
		{
			MethodName: "LegalType_Delete",
			Handler:    _SyncService_LegalType_Delete_Handler,
		},
		{
			MethodName: "LegalType_Restore",
			Handler:    _SyncService_LegalType_Restore_Handler,
		},
		{
			MethodName: "MessageSendStatus_Read",
			Handler:    _SyncService_MessageSendStatus_Read_Handler,
		},
		{
			MethodName: "MessageSendStatus_Create",
			Handler:    _SyncService_MessageSendStatus_Create_Handler,
		},
		{
			MethodName: "MessageSendStatus_Update",
			Handler:    _SyncService_MessageSendStatus_Update_Handler,
		},
		{
			MethodName: "MessageSendStatus_Save",
			Handler:    _SyncService_MessageSendStatus_Save_Handler,
		},
		{
			MethodName: "MessageSendStatus_Delete",
			Handler:    _SyncService_MessageSendStatus_Delete_Handler,
		},
		{
			MethodName: "MessageSendStatus_Restore",
			Handler:    _SyncService_MessageSendStatus_Restore_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Read",
			Handler:    _SyncService_OrganizationCategoryType_Read_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Create",
			Handler:    _SyncService_OrganizationCategoryType_Create_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Update",
			Handler:    _SyncService_OrganizationCategoryType_Update_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Save",
			Handler:    _SyncService_OrganizationCategoryType_Save_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_FindByExtID",
			Handler:    _SyncService_OrganizationCategoryType_FindByExtID_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Delete",
			Handler:    _SyncService_OrganizationCategoryType_Delete_Handler,
		},
		{
			MethodName: "OrganizationCategoryType_Restore",
			Handler:    _SyncService_OrganizationCategoryType_Restore_Handler,
		},
		{
			MethodName: "OrganizationStateType_Read",
			Handler:    _SyncService_OrganizationStateType_Read_Handler,
		},
		{
			MethodName: "OrganizationStateType_Create",
			Handler:    _SyncService_OrganizationStateType_Create_Handler,
		},
		{
			MethodName: "OrganizationStateType_Update",
			Handler:    _SyncService_OrganizationStateType_Update_Handler,
		},
		{
			MethodName: "OrganizationStateType_Save",
			Handler:    _SyncService_OrganizationStateType_Save_Handler,
		},
		{
			MethodName: "OrganizationStateType_Delete",
			Handler:    _SyncService_OrganizationStateType_Delete_Handler,
		},
		{
			MethodName: "OrganizationStateType_Restore",
			Handler:    _SyncService_OrganizationStateType_Restore_Handler,
		},
		{
			MethodName: "Organization_FindByExtID",
			Handler:    _SyncService_Organization_FindByExtID_Handler,
		},
		{
			MethodName: "PaymentDay_Read",
			Handler:    _SyncService_PaymentDay_Read_Handler,
		},
		{
			MethodName: "PaymentDay_Create",
			Handler:    _SyncService_PaymentDay_Create_Handler,
		},
		{
			MethodName: "PaymentDay_Update",
			Handler:    _SyncService_PaymentDay_Update_Handler,
		},
		{
			MethodName: "PaymentDay_Save",
			Handler:    _SyncService_PaymentDay_Save_Handler,
		},
		{
			MethodName: "PaymentDay_FindByExtID",
			Handler:    _SyncService_PaymentDay_FindByExtID_Handler,
		},
		{
			MethodName: "PaymentDay_Delete",
			Handler:    _SyncService_PaymentDay_Delete_Handler,
		},
		{
			MethodName: "PaymentDay_Restore",
			Handler:    _SyncService_PaymentDay_Restore_Handler,
		},
		{
			MethodName: "PaymentSchedule_Read",
			Handler:    _SyncService_PaymentSchedule_Read_Handler,
		},
		{
			MethodName: "PaymentSchedule_Create",
			Handler:    _SyncService_PaymentSchedule_Create_Handler,
		},
		{
			MethodName: "PaymentSchedule_Update",
			Handler:    _SyncService_PaymentSchedule_Update_Handler,
		},
		{
			MethodName: "PaymentSchedule_Save",
			Handler:    _SyncService_PaymentSchedule_Save_Handler,
		},
		{
			MethodName: "PaymentSchedule_FindByExtID",
			Handler:    _SyncService_PaymentSchedule_FindByExtID_Handler,
		},
		{
			MethodName: "PaymentSchedule_Delete",
			Handler:    _SyncService_PaymentSchedule_Delete_Handler,
		},
		{
			MethodName: "PaymentSchedule_Restore",
			Handler:    _SyncService_PaymentSchedule_Restore_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Read",
			Handler:    _SyncService_PenaltyCalculationItem_Read_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Create",
			Handler:    _SyncService_PenaltyCalculationItem_Create_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Update",
			Handler:    _SyncService_PenaltyCalculationItem_Update_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Save",
			Handler:    _SyncService_PenaltyCalculationItem_Save_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_FindByExtID",
			Handler:    _SyncService_PenaltyCalculationItem_FindByExtID_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Delete",
			Handler:    _SyncService_PenaltyCalculationItem_Delete_Handler,
		},
		{
			MethodName: "PenaltyCalculationItem_Restore",
			Handler:    _SyncService_PenaltyCalculationItem_Restore_Handler,
		},
		{
			MethodName: "ServiceProvider_Read",
			Handler:    _SyncService_ServiceProvider_Read_Handler,
		},
		{
			MethodName: "ServiceProvider_Create",
			Handler:    _SyncService_ServiceProvider_Create_Handler,
		},
		{
			MethodName: "ServiceProvider_Update",
			Handler:    _SyncService_ServiceProvider_Update_Handler,
		},
		{
			MethodName: "ServiceProvider_Save",
			Handler:    _SyncService_ServiceProvider_Save_Handler,
		},
		{
			MethodName: "ServiceProvider_FindByExtID",
			Handler:    _SyncService_ServiceProvider_FindByExtID_Handler,
		},
		{
			MethodName: "ServiceProvider_Delete",
			Handler:    _SyncService_ServiceProvider_Delete_Handler,
		},
		{
			MethodName: "ServiceProvider_Restore",
			Handler:    _SyncService_ServiceProvider_Restore_Handler,
		},
		{
			MethodName: "ServiceType_Read",
			Handler:    _SyncService_ServiceType_Read_Handler,
		},
		{
			MethodName: "ServiceType_Create",
			Handler:    _SyncService_ServiceType_Create_Handler,
		},
		{
			MethodName: "ServiceType_Update",
			Handler:    _SyncService_ServiceType_Update_Handler,
		},
		{
			MethodName: "ServiceType_Save",
			Handler:    _SyncService_ServiceType_Save_Handler,
		},
		{
			MethodName: "ServiceType_FindByExtID",
			Handler:    _SyncService_ServiceType_FindByExtID_Handler,
		},
		{
			MethodName: "ServiceType_Delete",
			Handler:    _SyncService_ServiceType_Delete_Handler,
		},
		{
			MethodName: "ServiceType_Restore",
			Handler:    _SyncService_ServiceType_Restore_Handler,
		},
		{
			MethodName: "StateDuty_Read",
			Handler:    _SyncService_StateDuty_Read_Handler,
		},
		{
			MethodName: "StateDuty_Create",
			Handler:    _SyncService_StateDuty_Create_Handler,
		},
		{
			MethodName: "StateDuty_Update",
			Handler:    _SyncService_StateDuty_Update_Handler,
		},
		{
			MethodName: "StateDuty_Save",
			Handler:    _SyncService_StateDuty_Save_Handler,
		},
		{
			MethodName: "StateDuty_Delete",
			Handler:    _SyncService_StateDuty_Delete_Handler,
		},
		{
			MethodName: "StateDuty_Restore",
			Handler:    _SyncService_StateDuty_Restore_Handler,
		},
		{
			MethodName: "TableName_Read",
			Handler:    _SyncService_TableName_Read_Handler,
		},
		{
			MethodName: "TableName_Create",
			Handler:    _SyncService_TableName_Create_Handler,
		},
		{
			MethodName: "TableName_Update",
			Handler:    _SyncService_TableName_Update_Handler,
		},
		{
			MethodName: "TableName_Save",
			Handler:    _SyncService_TableName_Save_Handler,
		},
		{
			MethodName: "TableName_Delete",
			Handler:    _SyncService_TableName_Delete_Handler,
		},
		{
			MethodName: "TableName_Restore",
			Handler:    _SyncService_TableName_Restore_Handler,
		},
		{
			MethodName: "UserRole_Read",
			Handler:    _SyncService_UserRole_Read_Handler,
		},
		{
			MethodName: "UserRole_Create",
			Handler:    _SyncService_UserRole_Create_Handler,
		},
		{
			MethodName: "UserRole_Update",
			Handler:    _SyncService_UserRole_Update_Handler,
		},
		{
			MethodName: "UserRole_Save",
			Handler:    _SyncService_UserRole_Save_Handler,
		},
		{
			MethodName: "UserRole_Delete",
			Handler:    _SyncService_UserRole_Delete_Handler,
		},
		{
			MethodName: "UserRole_Restore",
			Handler:    _SyncService_UserRole_Restore_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Read",
			Handler:    _SyncService_WhiteListReasonType_Read_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Create",
			Handler:    _SyncService_WhiteListReasonType_Create_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Update",
			Handler:    _SyncService_WhiteListReasonType_Update_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Save",
			Handler:    _SyncService_WhiteListReasonType_Save_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Delete",
			Handler:    _SyncService_WhiteListReasonType_Delete_Handler,
		},
		{
			MethodName: "WhiteListReasonType_Restore",
			Handler:    _SyncService_WhiteListReasonType_Restore_Handler,
		},
		{
			MethodName: "Organization_Read",
			Handler:    _SyncService_Organization_Read_Handler,
		},
		{
			MethodName: "Organization_Create",
			Handler:    _SyncService_Organization_Create_Handler,
		},
		{
			MethodName: "Organization_Update",
			Handler:    _SyncService_Organization_Update_Handler,
		},
		{
			MethodName: "Organization_Save",
			Handler:    _SyncService_Organization_Save_Handler,
		},
		{
			MethodName: "Organization_Delete",
			Handler:    _SyncService_Organization_Delete_Handler,
		},
		{
			MethodName: "Organization_Restore",
			Handler:    _SyncService_Organization_Restore_Handler,
		},
		{
			MethodName: "Organization_FindByInnKpp",
			Handler:    _SyncService_Organization_FindByInnKpp_Handler,
		},
		{
			MethodName: "Organization_FindByExtId",
			Handler:    _SyncService_Organization_FindByExtId_Handler,
		},
		{
			MethodName: "File_Read",
			Handler:    _SyncService_File_Read_Handler,
		},
		{
			MethodName: "File_Create",
			Handler:    _SyncService_File_Create_Handler,
		},
		{
			MethodName: "File_Update",
			Handler:    _SyncService_File_Update_Handler,
		},
		{
			MethodName: "File_Save",
			Handler:    _SyncService_File_Save_Handler,
		},
		{
			MethodName: "File_Delete",
			Handler:    _SyncService_File_Delete_Handler,
		},
		{
			MethodName: "File_Restore",
			Handler:    _SyncService_File_Restore_Handler,
		},
		{
			MethodName: "File_FindByFileID",
			Handler:    _SyncService_File_FindByFileID_Handler,
		},
		{
			MethodName: "File_FindByFullName",
			Handler:    _SyncService_File_FindByFullName_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Read",
			Handler:    _SyncService_OrganizationCasebook_Read_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Create",
			Handler:    _SyncService_OrganizationCasebook_Create_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Update",
			Handler:    _SyncService_OrganizationCasebook_Update_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Save",
			Handler:    _SyncService_OrganizationCasebook_Save_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Delete",
			Handler:    _SyncService_OrganizationCasebook_Delete_Handler,
		},
		{
			MethodName: "OrganizationCasebook_Restore",
			Handler:    _SyncService_OrganizationCasebook_Restore_Handler,
		},
		{
			MethodName: "OrganizationCasebook_FindByInnKpp",
			Handler:    _SyncService_OrganizationCasebook_FindByInnKpp_Handler,
		},
		{
			MethodName: "OrganizationCasebook_FindByInn",
			Handler:    _SyncService_OrganizationCasebook_FindByInn_Handler,
		},
		{
			MethodName: "OrganizationCasebook_FindByOrganizationId",
			Handler:    _SyncService_OrganizationCasebook_FindByOrganizationId_Handler,
		},
		{
			MethodName: "Connection_Read",
			Handler:    _SyncService_Connection_Read_Handler,
		},
		{
			MethodName: "Connection_Create",
			Handler:    _SyncService_Connection_Create_Handler,
		},
		{
			MethodName: "Connection_Update",
			Handler:    _SyncService_Connection_Update_Handler,
		},
		{
			MethodName: "Connection_Save",
			Handler:    _SyncService_Connection_Save_Handler,
		},
		{
			MethodName: "Employee_Read",
			Handler:    _SyncService_Employee_Read_Handler,
		},
		{
			MethodName: "Employee_Create",
			Handler:    _SyncService_Employee_Create_Handler,
		},
		{
			MethodName: "Employee_Update",
			Handler:    _SyncService_Employee_Update_Handler,
		},
		{
			MethodName: "Employee_Save",
			Handler:    _SyncService_Employee_Save_Handler,
		},
		{
			MethodName: "Employee_Delete",
			Handler:    _SyncService_Employee_Delete_Handler,
		},
		{
			MethodName: "Employee_Restore",
			Handler:    _SyncService_Employee_Restore_Handler,
		},
		{
			MethodName: "Employee_FindByExtId",
			Handler:    _SyncService_Employee_FindByExtId_Handler,
		},
		{
			MethodName: "Employee_FindByLogin",
			Handler:    _SyncService_Employee_FindByLogin_Handler,
		},
		{
			MethodName: "Employee_FindByEMail",
			Handler:    _SyncService_Employee_FindByEMail_Handler,
		},
		{
			MethodName: "Employee_FindByFIO",
			Handler:    _SyncService_Employee_FindByFIO_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Read",
			Handler:    _SyncService_LawsuitStatusState_Read_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Create",
			Handler:    _SyncService_LawsuitStatusState_Create_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Update",
			Handler:    _SyncService_LawsuitStatusState_Update_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Save",
			Handler:    _SyncService_LawsuitStatusState_Save_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Delete",
			Handler:    _SyncService_LawsuitStatusState_Delete_Handler,
		},
		{
			MethodName: "LawsuitStatusState_Restore",
			Handler:    _SyncService_LawsuitStatusState_Restore_Handler,
		},
		{
			MethodName: "LawsuitStatusState_FillFromLawsuit",
			Handler:    _SyncService_LawsuitStatusState_FillFromLawsuit_Handler,
		},
		{
			MethodName: "LawsuitStatusState_FindDebtSum",
			Handler:    _SyncService_LawsuitStatusState_FindDebtSum_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Read",
			Handler:    _SyncService_LawsuitStatusType_Read_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Create",
			Handler:    _SyncService_LawsuitStatusType_Create_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Update",
			Handler:    _SyncService_LawsuitStatusType_Update_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Save",
			Handler:    _SyncService_LawsuitStatusType_Save_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Delete",
			Handler:    _SyncService_LawsuitStatusType_Delete_Handler,
		},
		{
			MethodName: "LawsuitStatusType_Restore",
			Handler:    _SyncService_LawsuitStatusType_Restore_Handler,
		},
		{
			MethodName: "Lawsuit_Read",
			Handler:    _SyncService_Lawsuit_Read_Handler,
		},
		{
			MethodName: "Lawsuit_Create",
			Handler:    _SyncService_Lawsuit_Create_Handler,
		},
		{
			MethodName: "Lawsuit_Update",
			Handler:    _SyncService_Lawsuit_Update_Handler,
		},
		{
			MethodName: "Lawsuit_Save",
			Handler:    _SyncService_Lawsuit_Save_Handler,
		},
		{
			MethodName: "Lawsuit_Delete",
			Handler:    _SyncService_Lawsuit_Delete_Handler,
		},
		{
			MethodName: "Lawsuit_Restore",
			Handler:    _SyncService_Lawsuit_Restore_Handler,
		},
		{
			MethodName: "MessageAttachement_Read",
			Handler:    _SyncService_MessageAttachement_Read_Handler,
		},
		{
			MethodName: "MessageAttachement_Create",
			Handler:    _SyncService_MessageAttachement_Create_Handler,
		},
		{
			MethodName: "MessageAttachement_Update",
			Handler:    _SyncService_MessageAttachement_Update_Handler,
		},
		{
			MethodName: "MessageAttachement_Save",
			Handler:    _SyncService_MessageAttachement_Save_Handler,
		},
		{
			MethodName: "MessageAttachement_Delete",
			Handler:    _SyncService_MessageAttachement_Delete_Handler,
		},
		{
			MethodName: "MessageAttachement_Restore",
			Handler:    _SyncService_MessageAttachement_Restore_Handler,
		},
		{
			MethodName: "MessageSendStatuse_Read",
			Handler:    _SyncService_MessageSendStatuse_Read_Handler,
		},
		{
			MethodName: "MessageSendStatuse_Create",
			Handler:    _SyncService_MessageSendStatuse_Create_Handler,
		},
		{
			MethodName: "MessageSendStatuse_Update",
			Handler:    _SyncService_MessageSendStatuse_Update_Handler,
		},
		{
			MethodName: "MessageSendStatuse_Save",
			Handler:    _SyncService_MessageSendStatuse_Save_Handler,
		},
		{
			MethodName: "MessageSendStatuse_Delete",
			Handler:    _SyncService_MessageSendStatuse_Delete_Handler,
		},
		{
			MethodName: "MessageSendStatuse_Restore",
			Handler:    _SyncService_MessageSendStatuse_Restore_Handler,
		},
		{
			MethodName: "MessageType_Read",
			Handler:    _SyncService_MessageType_Read_Handler,
		},
		{
			MethodName: "MessageType_Create",
			Handler:    _SyncService_MessageType_Create_Handler,
		},
		{
			MethodName: "MessageType_Update",
			Handler:    _SyncService_MessageType_Update_Handler,
		},
		{
			MethodName: "MessageType_Save",
			Handler:    _SyncService_MessageType_Save_Handler,
		},
		{
			MethodName: "MessageType_Delete",
			Handler:    _SyncService_MessageType_Delete_Handler,
		},
		{
			MethodName: "MessageType_Restore",
			Handler:    _SyncService_MessageType_Restore_Handler,
		},
		{
			MethodName: "Message_Read",
			Handler:    _SyncService_Message_Read_Handler,
		},
		{
			MethodName: "Message_Create",
			Handler:    _SyncService_Message_Create_Handler,
		},
		{
			MethodName: "Message_Update",
			Handler:    _SyncService_Message_Update_Handler,
		},
		{
			MethodName: "Message_Save",
			Handler:    _SyncService_Message_Save_Handler,
		},
		{
			MethodName: "Message_Delete",
			Handler:    _SyncService_Message_Delete_Handler,
		},
		{
			MethodName: "Message_Restore",
			Handler:    _SyncService_Message_Restore_Handler,
		},
		{
			MethodName: "Message_FindBy_LawsuitID_MessageTypeID",
			Handler:    _SyncService_Message_FindBy_LawsuitID_MessageTypeID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sync_service.proto",
}
